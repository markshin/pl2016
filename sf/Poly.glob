DIGEST 2ea5efa49de19e6ad81ffa998d3dc619
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5147:5155 <> test_rev1
R5206:5211 Coq.Init.Logic <> :type_scope:x_'='_x not
R5245:5245 Coq.Init.Logic <> :type_scope:x_'='_x not
R5163:5165 Poly <> rev def
R5172:5175 Poly <> cons constr
R5184:5187 Poly <> cons constr
R5196:5198 Poly <> nil constr
R5200:5202 Coq.Init.Datatypes <> nat ind
R5189:5191 Coq.Init.Datatypes <> nat ind
R5177:5179 Coq.Init.Datatypes <> nat ind
R5167:5169 Coq.Init.Datatypes <> nat ind
R5212:5215 Poly <> cons constr
R5224:5227 Poly <> cons constr
R5236:5238 Poly <> nil constr
R5240:5242 Coq.Init.Datatypes <> nat ind
R5229:5231 Coq.Init.Datatypes <> nat ind
R5217:5219 Coq.Init.Datatypes <> nat ind
def 5283:5291 <> test_rev2
R5315:5317 Coq.Init.Logic <> :type_scope:x_'='_x not
R5296:5298 Poly <> rev def
R5306:5308 Poly <> nil constr
R5310:5313 Basics <> bool ind
R5300:5303 Basics <> bool ind
R5318:5320 Poly <> nil constr
R5322:5325 Basics <> bool ind
mod 5362:5370 <> MumbleBaz
ind 5493:5498 MumbleBaz mumble
constr 5514:5514 MumbleBaz a
constr 5529:5529 MumbleBaz b
constr 5561:5561 MumbleBaz c
R5518:5523 Poly <> mumble ind
R5550:5555 Poly <> mumble ind
R5543:5545 Coq.Init.Datatypes <> nat ind
R5533:5538 Poly <> mumble ind
R5565:5570 Poly <> mumble ind
ind 5583:5589 MumbleBaz grumble
constr 5614:5614 MumbleBaz d
constr 5642:5642 MumbleBaz e
R5628:5634 Poly <> grumble ind
R5618:5623 Poly MumbleBaz mumble ind
R5651:5657 Poly <> grumble ind
ind 6054:6056 MumbleBaz baz
constr 6073:6073 MumbleBaz x
constr 6093:6093 MumbleBaz y
R6084:6086 Poly <> baz ind
R6077:6079 Poly <> baz ind
R6112:6114 Poly <> baz ind
R6104:6107 Basics <> bool ind
R6097:6099 Poly <> baz ind
R6206:6214 Poly MumbleBaz <> mod
def 6477:6480 <> app'
R6492:6495 Poly <> list ind
R6497:6497 Poly <> X var
R6510:6511 Poly <> l1 var
R6522:6524 Poly <> nil constr
R6534:6535 Poly <> l2 var
R6541:6544 Poly <> cons constr
R6553:6556 Poly <> cons constr
R6563:6566 Poly <> app' def
R6572:6573 Poly <> l2 var
R6568:6568 Poly <> X var
R6558:6558 Poly <> X var
R6663:6666 Poly <> app' def
R6730:6732 Poly <> app def
def 9377:9383 <> length'
R9397:9400 Poly <> list ind
R9402:9402 Poly <> X var
R9407:9409 Coq.Init.Datatypes <> nat ind
R9422:9422 Poly <> l var
R9433:9435 Poly <> nil constr
R9451:9454 Poly <> cons constr
R9463:9463 Coq.Init.Datatypes <> S constr
R9466:9472 Poly <> length' def
def 9761:9767 <> list123
R9774:9777 Poly <> cons constr
R9786:9789 Poly <> cons constr
R9798:9801 Poly <> cons constr
R9810:9812 Poly <> nil constr
R9814:9816 Coq.Init.Datatypes <> nat ind
R9803:9805 Coq.Init.Datatypes <> nat ind
R9791:9793 Coq.Init.Datatypes <> nat ind
R9779:9781 Coq.Init.Datatypes <> nat ind
def 9890:9897 <> list123'
R9902:9905 Poly <> cons constr
R9912:9915 Poly <> cons constr
R9922:9925 Poly <> cons constr
R9932:9934 Poly <> nil constr
R10420:10422 Poly <> nil constr
R10420:10422 Poly <> nil constr
R10439:10442 Poly <> cons constr
R10439:10442 Poly <> cons constr
R10524:10529 Poly <> length def
R10524:10529 Poly <> length def
R10548:10550 Poly <> app def
R10548:10550 Poly <> app def
R10573:10575 Poly <> rev def
R10573:10575 Poly <> rev def
R10595:10598 Poly <> snoc def
R10595:10598 Poly <> snoc def
def 10660:10668 <> list123''
R10673:10676 Poly <> cons constr
R10681:10684 Poly <> cons constr
R10689:10692 Poly <> cons constr
R10696:10698 Poly <> nil constr
R10710:10715 Poly <> length def
R10717:10725 Poly <> list123'' def
def 10919:10926 <> length''
R10940:10943 Poly <> list ind
R10945:10945 Poly <> X var
R10950:10952 Coq.Init.Datatypes <> nat ind
R10965:10965 Poly <> l var
R10976:10978 Poly <> nil constr
R10994:10997 Poly <> cons constr
R11006:11006 Coq.Init.Datatypes <> S constr
R11009:11016 Poly <> length'' def
def 12043:12047 <> mynil
R12051:12054 Poly <> list ind
R12056:12058 Coq.Init.Datatypes <> nat ind
R12063:12065 Poly <> nil constr
R12194:12196 Poly <> nil constr
def 12211:12216 <> mynil'
R12222:12224 Poly <> nil constr
R12226:12228 Coq.Init.Datatypes <> nat ind
R12521:12524 Poly <> cons constr
not 12508 <> ::x_'::'_x
R12606:12608 Poly <> nil constr
not 12597 <> ::'['_']'
R12641:12644 Poly <> cons constr
R12652:12655 Poly <> cons constr
R12659:12660 Poly <> ::'['_']' not
not 12620 <> ::'['_x_';'_'..'_';'_x_']'
R12690:12692 Poly <> app def
not 12677 <> ::x_'++'_x
def 12825:12834 <> list123'''
R12839:12839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12841:12842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12844:12845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12847:12847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13200:13205 <> repeat
R13223:13223 Poly <> X var
R13235:13237 Coq.Init.Datatypes <> nat ind
R13242:13245 Poly <> list ind
R13247:13247 Poly <> X var
R13260:13264 Poly <> count var
R13277:13277 Coq.Init.Datatypes <> O constr
R13282:13284 Poly <> ::'['_']' not
R13292:13292 Coq.Init.Datatypes <> S constr
R13301:13304 Poly <> ::x_'::'_x not
R13300:13300 Poly <> n var
R13305:13310 Poly <> repeat def
R13312:13312 Poly <> n var
def 13333:13344 <> test_repeat1
R13362:13364 Coq.Init.Logic <> :type_scope:x_'='_x not
R13349:13354 Poly <> repeat def
R13356:13359 Basics <> true constr
R13365:13368 Poly <> cons constr
R13376:13379 Poly <> cons constr
R13386:13388 Poly <> nil constr
R13381:13384 Basics <> true constr
R13370:13373 Basics <> true constr
prf 13426:13432 <> nil_app
R13460:13463 Poly <> list ind
R13465:13465 Poly <> X var
R13478:13480 Coq.Init.Logic <> :type_scope:x_'='_x not
R13470:13472 Poly <> app def
R13477:13477 Poly <> l var
R13474:13475 Poly <> ::'['_']' not
R13481:13481 Poly <> l var
prf 13576:13583 <> rev_snoc
R13636:13636 Poly <> X var
R13671:13674 Poly <> list ind
R13676:13676 Poly <> X var
R13695:13697 Coq.Init.Logic <> :type_scope:x_'='_x not
R13681:13683 Poly <> rev def
R13686:13689 Poly <> snoc def
R13693:13693 Poly <> v var
R13691:13691 Poly <> s var
R13699:13703 Poly <> ::x_'::'_x not
R13709:13709 Poly <> ::x_'::'_x not
R13698:13698 Poly <> v var
R13704:13706 Poly <> rev def
R13708:13708 Poly <> s var
prf 13829:13842 <> rev_involutive
R13874:13877 Poly <> list ind
R13879:13879 Poly <> X var
R13895:13897 Coq.Init.Logic <> :type_scope:x_'='_x not
R13884:13886 Poly <> rev def
R13889:13891 Poly <> rev def
R13893:13893 Poly <> l var
R13898:13898 Poly <> l var
R13975:13982 Poly <> rev_snoc thm
R13975:13982 Poly <> rev_snoc thm
prf 14033:14048 <> snoc_with_append
R14109:14112 Poly <> list ind
R14114:14114 Poly <> X var
R14153:14153 Poly <> X var
R14175:14177 Coq.Init.Logic <> :type_scope:x_'='_x not
R14158:14161 Poly <> snoc def
R14174:14174 Poly <> v var
R14166:14169 Poly <> ::x_'++'_x not
R14164:14165 Poly <> l1 var
R14170:14171 Poly <> l2 var
R14180:14184 Poly <> ::x_'++'_x not
R14194:14194 Poly <> ::x_'++'_x not
R14178:14179 Poly <> l1 var
R14185:14188 Poly <> snoc def
R14193:14193 Poly <> v var
R14190:14191 Poly <> l2 var
ind 14585:14588 <> prod
constr 14615:14618 <> pair
R14632:14635 Poly <> prod ind
R14653:14656 Poly <> pair constr
R14653:14656 Poly <> pair constr
R14803:14806 Poly <> pair constr
not 14787 <> ::'('_x_','_x_')'
R14939:14942 Poly <> prod ind
not 14927 <> :type_scope:x_'*'_x
def 15565:15567 <> fst
R15588:15590 Poly <> :type_scope:x_'*'_x not
R15587:15587 Poly <> X var
R15591:15591 Poly <> Y var
R15596:15596 Poly <> X var
R15609:15609 Poly <> p var
R15616:15616 Poly <> ::'('_x_','_x_')' not
R15618:15618 Poly <> ::'('_x_','_x_')' not
R15620:15620 Poly <> ::'('_x_','_x_')' not
def 15644:15646 <> snd
R15667:15669 Poly <> :type_scope:x_'*'_x not
R15666:15666 Poly <> X var
R15670:15670 Poly <> Y var
R15675:15675 Poly <> Y var
R15688:15688 Poly <> p var
R15695:15695 Poly <> ::'('_x_','_x_')' not
R15697:15697 Poly <> ::'('_x_','_x_')' not
R15699:15699 Poly <> ::'('_x_','_x_')' not
def 16040:16046 <> combine
R16067:16070 Poly <> list ind
R16072:16072 Poly <> X var
R16081:16084 Poly <> list ind
R16086:16086 Poly <> Y var
R16102:16105 Poly <> list ind
R16109:16109 Poly <> :type_scope:x_'*'_x not
R16108:16108 Poly <> X var
R16110:16110 Poly <> Y var
R16124:16124 Poly <> ::'('_x_','_x_')' not
R16127:16127 Poly <> ::'('_x_','_x_')' not
R16130:16130 Poly <> ::'('_x_','_x_')' not
R16125:16126 Poly <> lx var
R16128:16129 Poly <> ly var
R16141:16141 Poly <> ::'('_x_','_x_')' not
R16144:16144 Poly <> ::'('_x_','_x_')' not
R16146:16146 Poly <> ::'('_x_','_x_')' not
R16142:16143 Poly <> ::'['_']' not
R16151:16152 Poly <> ::'['_']' not
R16158:16158 Poly <> ::'('_x_','_x_')' not
R16160:16160 Poly <> ::'('_x_','_x_')' not
R16163:16163 Poly <> ::'('_x_','_x_')' not
R16161:16162 Poly <> ::'['_']' not
R16168:16169 Poly <> ::'['_']' not
R16175:16175 Poly <> ::'('_x_','_x_')' not
R16181:16182 Poly <> ::'('_x_','_x_')' not
R16188:16188 Poly <> ::'('_x_','_x_')' not
R16177:16178 Poly <> ::x_'::'_x not
R16184:16185 Poly <> ::x_'::'_x not
R16198:16202 Poly <> ::x_'::'_x not
R16216:16216 Poly <> ::x_'::'_x not
R16193:16193 Poly <> ::'('_x_','_x_')' not
R16195:16195 Poly <> ::'('_x_','_x_')' not
R16197:16197 Poly <> ::'('_x_','_x_')' not
R16203:16209 Poly <> combine def
def 16926:16930 <> split
R16961:16964 Poly <> list ind
R16968:16968 Poly <> :type_scope:x_'*'_x not
R16967:16967 Poly <> X var
R16969:16969 Poly <> Y var
R16986:16986 Poly <> :type_scope:x_'*'_x not
R16993:16997 Poly <> :type_scope:x_'*'_x not
R17004:17004 Poly <> :type_scope:x_'*'_x not
R16987:16990 Poly <> list ind
R16992:16992 Poly <> X var
R16998:17001 Poly <> list ind
R17003:17003 Poly <> Y var
R17017:17017 Poly <> l var
R17030:17032 Poly <> nil constr
R17037:17037 Poly <> ::'('_x_','_x_')' not
R17040:17040 Poly <> ::'('_x_','_x_')' not
R17043:17043 Poly <> ::'('_x_','_x_')' not
R17038:17039 Poly <> ::'['_']' not
R17041:17042 Poly <> ::'['_']' not
R17057:17060 Poly <> ::x_'::'_x not
R17051:17051 Poly <> ::'('_x_','_x_')' not
R17053:17054 Poly <> ::'('_x_','_x_')' not
R17056:17056 Poly <> ::'('_x_','_x_')' not
R17066:17066 Poly <> ::'('_x_','_x_')' not
R17084:17085 Poly <> ::'('_x_','_x_')' not
R17103:17103 Poly <> ::'('_x_','_x_')' not
R17068:17071 Poly <> ::x_'::'_x not
R17072:17074 Poly <> fst def
R17076:17080 Poly <> split def
R17087:17089 Poly <> ::x_'::'_x not
R17090:17092 Poly <> snd def
R17095:17099 Poly <> split def
def 17122:17131 <> test_split
R17163:17165 Coq.Init.Logic <> :type_scope:x_'='_x not
R17136:17140 Poly <> split def
R17142:17142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17152:17152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17162:17162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17153:17153 Poly <> ::'('_x_','_x_')' not
R17155:17155 Poly <> ::'('_x_','_x_')' not
R17161:17161 Poly <> ::'('_x_','_x_')' not
R17156:17160 Basics <> false constr
R17143:17143 Poly <> ::'('_x_','_x_')' not
R17145:17145 Poly <> ::'('_x_','_x_')' not
R17151:17151 Poly <> ::'('_x_','_x_')' not
R17146:17150 Basics <> false constr
R17166:17166 Poly <> ::'('_x_','_x_')' not
R17172:17172 Poly <> ::'('_x_','_x_')' not
R17186:17186 Poly <> ::'('_x_','_x_')' not
R17167:17167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17169:17169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17171:17171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17173:17173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17179:17179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17185:17185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17180:17184 Basics <> false constr
R17174:17178 Basics <> false constr
ind 17484:17489 <> option
constr 17514:17517 <> Some
constr 17539:17542 <> None
R17526:17531 Poly <> option ind
R17546:17551 Poly <> option ind
R17567:17570 Poly <> Some constr
R17567:17570 Poly <> Some constr
R17590:17593 Poly <> None constr
R17590:17593 Poly <> None constr
def 17715:17719 <> index
R17737:17739 Coq.Init.Datatypes <> nat ind
R17762:17765 Poly <> list ind
R17767:17767 Poly <> X var
R17772:17777 Poly <> option ind
R17779:17779 Poly <> X var
R17792:17792 Poly <> l var
R17803:17804 Poly <> ::'['_']' not
R17809:17812 Poly <> None constr
R17819:17822 Poly <> ::x_'::'_x not
R17832:17838 Basics <> beq_nat def
R17842:17842 Coq.Init.Datatypes <> O constr
R17840:17840 Poly <> n var
R17861:17865 Poly <> index def
R17868:17871 Coq.Init.Peano <> pred def
R17873:17873 Poly <> n var
R17849:17852 Poly <> Some constr
def 17895:17905 <> test_index1
R17929:17932 Coq.Init.Logic <> :type_scope:x_'='_x not
R17912:17916 Poly <> index def
R17920:17920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17922:17922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17924:17924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17926:17926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17928:17928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17933:17936 Poly <> Some constr
def 17975:17985 <> test_index2
R18010:18013 Coq.Init.Logic <> :type_scope:x_'='_x not
R17992:17996 Poly <> index def
R18001:18001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18005:18005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18009:18009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18006:18006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18008:18008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18002:18002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18004:18004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18014:18017 Poly <> Some constr
R18019:18019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18021:18021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18058:18068 <> test_index3
R18090:18093 Coq.Init.Logic <> :type_scope:x_'='_x not
R18075:18079 Poly <> index def
R18084:18084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18089:18089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18085:18088 Basics <> true constr
R18094:18097 Poly <> None constr
def 18350:18355 <> hd_opt
R18373:18376 Poly <> list ind
R18378:18378 Poly <> X var
R18384:18389 Poly <> option ind
R18391:18391 Poly <> X var
R18404:18404 Poly <> l var
R18417:18418 Poly <> ::'['_']' not
R18423:18426 Poly <> None constr
R18435:18436 Poly <> ::x_'::'_x not
R18442:18445 Poly <> Some constr
R18585:18590 Poly <> hd_opt def
def 18602:18613 <> test_hd_opt1
R18630:18632 Coq.Init.Logic <> :type_scope:x_'='_x not
R18618:18623 Poly <> hd_opt def
R18625:18625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18627:18627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18629:18629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18633:18636 Poly <> Some constr
def 18674:18685 <> test_hd_opt2
R18708:18711 Coq.Init.Logic <> :type_scope:x_'='_x not
R18691:18696 Poly <> hd_opt def
R18699:18699 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18703:18703 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18707:18707 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18704:18704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18706:18706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18700:18700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18702:18702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18712:18715 Poly <> Some constr
R18717:18717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18719:18719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19372:19381 <> doit3times
R19398:19398 Poly <> X var
R19395:19395 Poly <> X var
R19404:19404 Poly <> X var
R19409:19409 Poly <> X var
R19416:19416 Poly <> f var
R19419:19419 Poly <> f var
R19422:19422 Poly <> f var
R19424:19424 Poly <> n var
R19583:19592 Poly <> doit3times def
def 19664:19678 <> test_doit3times
R19702:19704 Coq.Init.Logic <> :type_scope:x_'='_x not
R19681:19690 Poly <> doit3times def
R19692:19699 Basics <> minustwo def
def 19743:19758 <> test_doit3times'
R19781:19783 Coq.Init.Logic <> :type_scope:x_'='_x not
R19761:19770 Poly <> doit3times def
R19777:19780 Basics <> true constr
R19772:19775 Basics <> negb def
R19784:19788 Basics <> false constr
R20082:20085 Coq.Init.Peano <> plus def
def 20807:20811 <> plus3
R20816:20819 Coq.Init.Peano <> plus def
R20830:20834 Poly <> plus3 def
def 20846:20855 <> test_plus3
R20869:20871 Coq.Init.Logic <> :type_scope:x_'='_x not
R20862:20866 Poly <> plus3 def
def 20909:20919 <> test_plus3'
R20943:20945 Coq.Init.Logic <> :type_scope:x_'='_x not
R20925:20934 Poly <> doit3times def
R20936:20940 Poly <> plus3 def
def 20983:20994 <> test_plus3''
R21020:21022 Coq.Init.Logic <> :type_scope:x_'='_x not
R20999:21008 Poly <> doit3times def
R21011:21014 Coq.Init.Peano <> plus def
def 21947:21956 <> prod_curry
R21989:21989 Poly <> Z var
R21981:21983 Poly <> :type_scope:x_'*'_x not
R21980:21980 Poly <> X var
R21984:21984 Poly <> Y var
R21997:21997 Poly <> X var
R22005:22005 Poly <> Y var
R22010:22010 Poly <> Z var
R22015:22015 Poly <> f var
R22017:22017 Poly <> ::'('_x_','_x_')' not
R22019:22020 Poly <> ::'('_x_','_x_')' not
R22022:22022 Poly <> ::'('_x_','_x_')' not
R22018:22018 Poly <> x var
R22021:22021 Poly <> y var
def 22167:22178 <> prod_uncurry
R22212:22212 Poly <> Z var
R22207:22207 Poly <> Y var
R22202:22202 Poly <> X var
R22221:22223 Poly <> :type_scope:x_'*'_x not
R22220:22220 Poly <> X var
R22224:22224 Poly <> Y var
R22229:22229 Poly <> Z var
R22242:22242 Poly <> p var
R22255:22255 Poly <> ::'('_x_','_x_')' not
R22257:22258 Poly <> ::'('_x_','_x_')' not
R22260:22260 Poly <> ::'('_x_','_x_')' not
R22265:22265 Poly <> f var
R22414:22423 Poly <> prod_curry def
R22433:22444 Poly <> prod_uncurry def
prf 22456:22468 <> uncurry_curry
R22509:22509 Poly <> Z var
R22504:22504 Poly <> Y var
R22499:22499 Poly <> X var
R22550:22552 Coq.Init.Logic <> :type_scope:x_'='_x not
R22519:22528 Poly <> prod_curry def
R22549:22549 Poly <> y var
R22547:22547 Poly <> x var
R22531:22542 Poly <> prod_uncurry def
R22544:22544 Poly <> f var
R22553:22553 Poly <> f var
R22557:22557 Poly <> y var
R22555:22555 Poly <> x var
R22586:22597 Poly <> prod_uncurry def
R22609:22618 Poly <> prod_curry def
prf 22652:22664 <> curry_uncurry
R22737:22737 Poly <> Z var
R22728:22730 Poly <> :type_scope:x_'*'_x not
R22727:22727 Poly <> X var
R22731:22731 Poly <> Y var
R22746:22748 Poly <> :type_scope:x_'*'_x not
R22745:22745 Poly <> X var
R22749:22749 Poly <> Y var
R22784:22786 Coq.Init.Logic <> :type_scope:x_'='_x not
R22755:22766 Poly <> prod_uncurry def
R22783:22783 Poly <> p var
R22769:22778 Poly <> prod_curry def
R22780:22780 Poly <> f var
R22787:22787 Poly <> f var
R22789:22789 Poly <> p var
R22818:22827 Poly <> prod_curry def
R22839:22850 Poly <> prod_uncurry def
def 23258:23263 <> filter
R23284:23287 Basics <> bool ind
R23281:23281 Poly <> X var
R23293:23296 Poly <> list ind
R23298:23298 Poly <> X var
R23320:23323 Poly <> list ind
R23325:23325 Poly <> X var
R23339:23339 Poly <> l var
R23350:23351 Poly <> ::'['_']' not
R23360:23361 Poly <> ::'['_']' not
R23368:23371 Poly <> ::x_'::'_x not
R23380:23383 Poly <> test var
R23448:23453 Poly <> filter def
R23455:23458 Poly <> test var
R23393:23397 Poly <> ::x_'::'_x not
R23411:23411 Poly <> ::x_'::'_x not
R23398:23403 Poly <> filter def
R23405:23408 Poly <> test var
def 23639:23650 <> test_filter1
R23675:23677 Coq.Init.Logic <> :type_scope:x_'='_x not
R23653:23658 Poly <> filter def
R23666:23666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23668:23668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23670:23670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23672:23672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23674:23674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23660:23664 Basics <> evenb def
R23678:23678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23680:23680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23682:23682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23734:23744 <> length_is_1
R23762:23765 Poly <> list ind
R23767:23767 Poly <> X var
R23772:23775 Basics <> bool ind
R23782:23788 Basics <> beq_nat def
R23791:23796 Poly <> length def
R23798:23798 Poly <> l var
def 23813:23824 <> test_filter2
R23899:23903 Coq.Init.Logic <> :type_scope:x_'='_x not
R23831:23836 Poly <> filter def
R23861:23862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23869:23870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23874:23875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23879:23880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23888:23889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23892:23893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23897:23898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23894:23894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23896:23896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23890:23891 Poly <> ::'['_']' not
R23881:23881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23883:23883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23885:23885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23887:23887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23876:23876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23878:23878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23871:23871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23873:23873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23863:23863 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23865:23866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23868:23868 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23838:23848 Poly <> length_is_1 def
R23904:23905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23909:23910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23914:23915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23919:23920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23916:23916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23918:23918 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23911:23911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23913:23913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23906:23906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23908:23908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24091:24106 <> countoddmembers'
R24111:24114 Poly <> list ind
R24116:24118 Coq.Init.Datatypes <> nat ind
R24123:24125 Coq.Init.Datatypes <> nat ind
R24132:24137 Poly <> length def
R24140:24145 Poly <> filter def
R24152:24152 Poly <> l var
R24147:24150 Basics <> oddb def
def 24165:24186 <> test_countoddmembers'1
R24221:24223 Coq.Init.Logic <> :type_scope:x_'='_x not
R24191:24206 Poly <> countoddmembers' def
R24208:24208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24210:24210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24212:24212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24214:24214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24216:24216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24218:24218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24220:24220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24261:24282 <> test_countoddmembers'2
R24311:24313 Coq.Init.Logic <> :type_scope:x_'='_x not
R24287:24302 Poly <> countoddmembers' def
R24304:24304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24306:24306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24308:24308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24310:24310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24351:24372 <> test_countoddmembers'3
R24397:24399 Coq.Init.Logic <> :type_scope:x_'='_x not
R24377:24392 Poly <> countoddmembers' def
R24394:24396 Poly <> nil constr
def 25266:25279 <> test_anon_fun'
R25313:25315 Coq.Init.Logic <> :type_scope:x_'='_x not
R25284:25293 Poly <> doit3times def
R25306:25308 Basics <> :nat_scope:x_'*'_x not
R25305:25305 Poly <> n var
R25309:25309 Poly <> n var
def 25452:25464 <> test_filter2'
R25559:25563 Coq.Init.Logic <> :type_scope:x_'='_x not
R25471:25476 Poly <> filter def
R25521:25522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25529:25530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25534:25535 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25539:25540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25548:25549 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25552:25553 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25557:25558 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25554:25554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25556:25556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25550:25551 Poly <> ::'['_']' not
R25541:25541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25543:25543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25545:25545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25547:25547 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25536:25536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25538:25538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25531:25531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25533:25533 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25523:25523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25525:25526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25528:25528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25488:25494 Basics <> beq_nat def
R25497:25502 Poly <> length def
R25504:25504 Poly <> l var
R25564:25565 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25569:25570 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25574:25575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25579:25580 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25576:25576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25578:25578 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25571:25571 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25573:25573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25566:25566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25568:25568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25883:25897 <> filter_even_gt7
R25904:25907 Poly <> list ind
R25909:25911 Coq.Init.Datatypes <> nat ind
R25916:25919 Poly <> list ind
R25921:25923 Coq.Init.Datatypes <> nat ind
R25930:25935 Poly <> filter def
R25977:25977 Poly <> l var
R25947:25950 Basics <> andb def
R25963:25969 Basics <> blt_nat def
R25973:25973 Poly <> n var
R25953:25957 Basics <> evenb def
R25959:25959 Poly <> n var
def 25989:26010 <> test_filter_even_gt7_1
R26051:26053 Coq.Init.Logic <> :type_scope:x_'='_x not
R26016:26030 Poly <> filter_even_gt7 def
R26032:26032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26034:26034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26036:26036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26038:26038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26040:26040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26043:26043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26045:26045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26048:26048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26050:26050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26054:26054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26057:26057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26060:26060 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26062:26062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26099:26120 <> test_filter_even_gt7_2
R26156:26158 Coq.Init.Logic <> :type_scope:x_'='_x not
R26126:26140 Poly <> filter_even_gt7 def
R26142:26142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26144:26144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26146:26146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26148:26148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26151:26151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26155:26155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26159:26160 Poly <> ::'['_']' not
def 26809:26817 <> partition
R26843:26846 Basics <> bool ind
R26838:26838 Poly <> X var
R26854:26857 Poly <> list ind
R26859:26859 Poly <> X var
R26870:26872 Poly <> :type_scope:x_'*'_x not
R26864:26867 Poly <> list ind
R26869:26869 Poly <> X var
R26873:26876 Poly <> list ind
R26878:26878 Poly <> X var
R26885:26886 Poly <> ::'('_x_','_x_')' not
R26900:26903 Poly <> ::'('_x_','_x_')' not
R26936:26937 Poly <> ::'('_x_','_x_')' not
R26887:26892 Poly <> filter def
R26899:26899 Poly <> l var
R26894:26897 Poly <> test var
R26904:26909 Poly <> filter def
R26935:26935 Poly <> l var
R26921:26924 Basics <> negb def
R26926:26929 Poly <> test var
R26931:26931 Poly <> n var
def 26950:26964 <> test_partition1
R26993:26995 Coq.Init.Logic <> :type_scope:x_'='_x not
R26967:26975 Poly <> partition def
R26982:26982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26984:26984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26986:26986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26988:26988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26990:26990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26992:26992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26977:26980 Basics <> oddb def
R26996:26996 Poly <> ::'('_x_','_x_')' not
R27004:27005 Poly <> ::'('_x_','_x_')' not
R27011:27011 Poly <> ::'('_x_','_x_')' not
R26997:26997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26999:26999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27001:27001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27003:27003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27006:27006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27008:27008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27010:27010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27047:27061 <> test_partition2
R27098:27100 Coq.Init.Logic <> :type_scope:x_'='_x not
R27064:27072 Poly <> partition def
R27091:27091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27093:27093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27095:27095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27097:27097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27084:27088 Basics <> false constr
R27101:27101 Poly <> ::'('_x_','_x_')' not
R27104:27105 Poly <> ::'('_x_','_x_')' not
R27113:27113 Poly <> ::'('_x_','_x_')' not
R27102:27103 Poly <> ::'['_']' not
R27106:27106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27108:27108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27110:27110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27112:27112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27298:27300 <> map
R27319:27319 Poly <> Y var
R27316:27316 Poly <> X var
R27325:27328 Poly <> list ind
R27330:27330 Poly <> X var
R27349:27352 Poly <> list ind
R27354:27354 Poly <> Y var
R27368:27368 Poly <> l var
R27379:27380 Poly <> ::'['_']' not
R27389:27390 Poly <> ::'['_']' not
R27397:27400 Poly <> ::x_'::'_x not
R27406:27406 Poly <> ::x_'::'_x not
R27410:27415 Poly <> ::x_'::'_x not
R27423:27423 Poly <> ::x_'::'_x not
R27407:27407 Poly <> f var
R27416:27418 Poly <> map def
R27420:27420 Poly <> f var
def 27651:27659 <> test_map1
R27682:27684 Coq.Init.Logic <> :type_scope:x_'='_x not
R27662:27664 Poly <> map def
R27675:27675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27677:27677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27679:27679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27681:27681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27667:27670 Coq.Init.Peano <> plus def
R27685:27685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27687:27687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27689:27689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27691:27691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28000:28008 <> test_map2
R28029:28031 Coq.Init.Logic <> :type_scope:x_'='_x not
R28011:28013 Poly <> map def
R28020:28020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28022:28022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28024:28024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28026:28026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28028:28028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28015:28018 Basics <> oddb def
R28032:28032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28038:28038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28043:28043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28049:28049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28054:28054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28050:28053 Basics <> true constr
R28044:28048 Basics <> false constr
R28039:28042 Basics <> true constr
R28033:28037 Basics <> false constr
def 28241:28249 <> test_map3
R28297:28301 Coq.Init.Logic <> :type_scope:x_'='_x not
R28256:28258 Poly <> map def
R28288:28288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28290:28290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28292:28292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28294:28294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28296:28296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28270:28270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28278:28278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28285:28285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28279:28282 Basics <> oddb def
R28284:28284 Poly <> n var
R28271:28275 Basics <> evenb def
R28277:28277 Poly <> n var
R28302:28302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28315:28315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28328:28328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28341:28341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28354:28354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28342:28342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28348:28348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28353:28353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28349:28352 Basics <> true constr
R28343:28347 Basics <> false constr
R28329:28329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28334:28334 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28340:28340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28335:28339 Basics <> false constr
R28330:28333 Basics <> true constr
R28316:28316 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28322:28322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28327:28327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28323:28326 Basics <> true constr
R28317:28321 Basics <> false constr
R28303:28303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28308:28308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28314:28314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28309:28313 Basics <> false constr
R28304:28307 Basics <> true constr
prf 28550:28557 <> map_snoc
R28591:28591 Poly <> Y var
R28586:28586 Poly <> X var
R28599:28599 Poly <> X var
R28607:28610 Poly <> list ind
R28612:28612 Poly <> X var
R28651:28653 Coq.Init.Logic <> :type_scope:x_'='_x not
R28635:28637 Poly <> map def
R28642:28645 Poly <> snoc def
R28649:28649 Poly <> x var
R28647:28647 Poly <> l var
R28639:28639 Poly <> f var
R28654:28657 Poly <> snoc def
R28670:28670 Poly <> f var
R28672:28672 Poly <> x var
R28660:28662 Poly <> map def
R28666:28666 Poly <> l var
R28664:28664 Poly <> f var
prf 28784:28790 <> map_rev
R28824:28824 Poly <> Y var
R28819:28819 Poly <> X var
R28832:28835 Poly <> list ind
R28837:28837 Poly <> X var
R28856:28858 Coq.Init.Logic <> :type_scope:x_'='_x not
R28843:28845 Poly <> map def
R28850:28852 Poly <> rev def
R28854:28854 Poly <> l var
R28847:28847 Poly <> f var
R28859:28861 Poly <> rev def
R28864:28866 Poly <> map def
R28870:28870 Poly <> l var
R28868:28868 Poly <> f var
R28949:28952 Poly <> snoc def
R28986:28993 Poly <> map_snoc thm
R28986:28993 Poly <> map_snoc thm
def 29479:29486 <> flat_map
R29507:29510 Poly <> list ind
R29512:29512 Poly <> Y var
R29502:29502 Poly <> X var
R29518:29521 Poly <> list ind
R29523:29523 Poly <> X var
R29548:29551 Poly <> list ind
R29553:29553 Poly <> Y var
R29567:29567 Poly <> l var
R29580:29581 Poly <> ::'['_']' not
R29586:29587 Poly <> ::'['_']' not
R29596:29599 Poly <> ::x_'::'_x not
R29605:29605 Poly <> ::x_'++'_x not
R29609:29613 Poly <> ::x_'++'_x not
R29606:29606 Poly <> f var
R29614:29621 Poly <> flat_map def
R29623:29623 Poly <> f var
def 29644:29657 <> test_flat_map1
R29697:29701 Coq.Init.Logic <> :type_scope:x_'='_x not
R29662:29669 Poly <> flat_map def
R29690:29690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29692:29692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29694:29694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29696:29696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29681:29681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29683:29683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29685:29685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29687:29687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29686:29686 Poly <> n var
R29684:29684 Poly <> n var
R29682:29682 Poly <> n var
R29702:29702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29704:29705 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29707:29708 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29710:29711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29713:29714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29716:29717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29719:29720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29722:29723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29725:29726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29728:29728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29928:29937 <> option_map
R29962:29962 Poly <> Y var
R29957:29957 Poly <> X var
R29971:29976 Poly <> option ind
R29978:29978 Poly <> X var
R30005:30010 Poly <> option ind
R30012:30012 Poly <> Y var
R30025:30026 Poly <> xo var
R30039:30042 Poly <> None constr
R30047:30050 Poly <> None constr
R30058:30061 Poly <> Some constr
R30068:30071 Poly <> Some constr
R30074:30074 Poly <> f var
def 30896:30899 <> fold
R30922:30922 Poly <> Y var
R30919:30919 Poly <> Y var
R30916:30916 Poly <> X var
R30928:30931 Poly <> list ind
R30933:30933 Poly <> X var
R30939:30939 Poly <> Y var
R30944:30944 Poly <> Y var
R30957:30957 Poly <> l var
R30968:30970 Poly <> nil constr
R30975:30975 Poly <> b var
R30982:30985 Poly <> ::x_'::'_x not
R30991:30991 Poly <> f var
R30996:30999 Poly <> fold def
R31005:31005 Poly <> b var
R31001:31001 Poly <> f var
R31489:31492 Poly <> fold def
R31494:31497 Basics <> andb def
def 31559:31571 <> fold_example1
R31596:31598 Coq.Init.Logic <> :type_scope:x_'='_x not
R31575:31578 Poly <> fold def
R31585:31585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31587:31587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31589:31589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31591:31591 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31593:31593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31580:31583 Coq.Init.Peano <> mult def
def 31637:31649 <> fold_example2
R31690:31692 Coq.Init.Logic <> :type_scope:x_'='_x not
R31653:31656 Poly <> fold def
R31686:31689 Basics <> true constr
R31663:31663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31668:31668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31673:31673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31679:31679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31684:31684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31680:31683 Basics <> true constr
R31674:31678 Basics <> false constr
R31669:31672 Basics <> true constr
R31664:31667 Basics <> true constr
R31658:31661 Basics <> andb def
R31693:31697 Basics <> false constr
def 31734:31746 <> fold_example3
R31781:31783 Coq.Init.Logic <> :type_scope:x_'='_x not
R31750:31753 Poly <> fold def
R31779:31780 Poly <> ::'['_']' not
R31760:31760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31764:31764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31767:31767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31773:31773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31777:31777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31774:31774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31776:31776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31768:31768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31770:31770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31772:31772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31765:31766 Poly <> ::'['_']' not
R31761:31761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31763:31763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31755:31757 Poly <> app def
R31784:31784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31786:31786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31788:31788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31790:31790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31792:31792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32709:32716 <> constfun
R32732:32732 Poly <> X var
R32742:32742 Poly <> X var
R32737:32739 Coq.Init.Datatypes <> nat ind
R32756:32758 Coq.Init.Datatypes <> nat ind
R32764:32764 Poly <> x var
def 32779:32783 <> ftrue
R32788:32795 Poly <> constfun def
R32797:32800 Basics <> true constr
def 32812:32828 <> constfun_example1
R32839:32841 Coq.Init.Logic <> :type_scope:x_'='_x not
R32832:32836 Poly <> ftrue def
R32842:32845 Basics <> true constr
def 32882:32898 <> constfun_example2
R32917:32919 Coq.Init.Logic <> :type_scope:x_'='_x not
R32903:32910 Poly <> constfun def
def 33263:33270 <> override
R33291:33291 Poly <> X var
R33286:33288 Coq.Init.Datatypes <> nat ind
R33297:33299 Coq.Init.Datatypes <> nat ind
R33305:33305 Poly <> X var
R33315:33315 Poly <> X var
R33310:33312 Coq.Init.Datatypes <> nat ind
R33329:33331 Coq.Init.Datatypes <> nat ind
R33340:33346 Basics <> beq_nat def
R33350:33351 Poly <> k' var
R33348:33348 Poly <> k var
R33365:33365 Poly <> f var
R33367:33368 Poly <> k' var
R33358:33358 Poly <> x var
def 33567:33577 <> fmostlytrue
R33582:33589 Poly <> override def
R33618:33622 Basics <> false constr
R33592:33599 Poly <> override def
R33609:33613 Basics <> false constr
R33601:33605 Poly <> ftrue def
def 33646:33662 <> override_example1
R33679:33681 Coq.Init.Logic <> :type_scope:x_'='_x not
R33666:33676 Poly <> fmostlytrue def
R33682:33685 Basics <> true constr
def 33722:33738 <> override_example2
R33755:33757 Coq.Init.Logic <> :type_scope:x_'='_x not
R33742:33752 Poly <> fmostlytrue def
R33758:33762 Basics <> false constr
def 33799:33815 <> override_example3
R33832:33834 Coq.Init.Logic <> :type_scope:x_'='_x not
R33819:33829 Poly <> fmostlytrue def
R33835:33838 Basics <> true constr
def 33875:33891 <> override_example4
R33908:33910 Coq.Init.Logic <> :type_scope:x_'='_x not
R33895:33905 Poly <> fmostlytrue def
R33911:33915 Basics <> false constr
prf 34216:34231 <> override_example
R34245:34248 Basics <> bool ind
R34286:34288 Coq.Init.Logic <> :type_scope:x_'='_x not
R34255:34262 Poly <> override def
R34279:34282 Basics <> true constr
R34265:34272 Poly <> constfun def
R34274:34274 Poly <> b var
R34289:34289 Poly <> b var
R34332:34339 Poly <> override def
R34351:34358 Poly <> constfun def
R34390:34397 Poly <> override def
R34407:34414 Poly <> constfun def
prf 35427:35444 <> unfold_example_bad
R35488:35490 Coq.Init.Logic <> :type_scope:x_'='_x not
R35484:35486 Basics <> :nat_scope:x_'+'_x not
R35477:35481 Poly <> plus3 def
R35483:35483 Poly <> n var
R35492:35494 Basics <> :nat_scope:x_'+'_x not
R35491:35491 Poly <> m var
R35467:35469 Coq.Init.Logic <> :type_scope:x_'='_x not
R35463:35465 Basics <> :nat_scope:x_'+'_x not
R35466:35466 Poly <> n var
R35470:35470 Poly <> m var
prf 35858:35871 <> unfold_example
R35915:35917 Coq.Init.Logic <> :type_scope:x_'='_x not
R35911:35913 Basics <> :nat_scope:x_'+'_x not
R35904:35908 Poly <> plus3 def
R35910:35910 Poly <> n var
R35919:35921 Basics <> :nat_scope:x_'+'_x not
R35918:35918 Poly <> m var
R35894:35896 Coq.Init.Logic <> :type_scope:x_'='_x not
R35890:35892 Basics <> :nat_scope:x_'+'_x not
R35893:35893 Poly <> n var
R35897:35897 Poly <> m var
R35957:35961 Poly <> plus3 def
prf 36178:36188 <> override_eq
R36220:36220 Poly <> X var
R36215:36217 Coq.Init.Datatypes <> nat ind
R36244:36246 Coq.Init.Logic <> :type_scope:x_'='_x not
R36227:36234 Poly <> override def
R36240:36240 Poly <> x var
R36238:36238 Poly <> k var
R36236:36236 Poly <> f var
R36243:36243 Poly <> k var
R36247:36247 Poly <> x var
R36284:36291 Poly <> override def
R36307:36318 Induction <> beq_nat_refl thm
R36307:36318 Induction <> beq_nat_refl thm
prf 36516:36527 <> override_neq
R36569:36569 Poly <> X var
R36564:36566 Coq.Init.Datatypes <> nat ind
R36638:36640 Coq.Init.Logic <> :type_scope:x_'='_x not
R36618:36625 Poly <> override def
R36632:36633 Poly <> x2 var
R36629:36630 Poly <> k2 var
R36627:36627 Poly <> f var
R36636:36637 Poly <> k1 var
R36641:36642 Poly <> x1 var
R36603:36605 Coq.Init.Logic <> :type_scope:x_'='_x not
R36590:36596 Basics <> beq_nat def
R36601:36602 Poly <> k1 var
R36598:36599 Poly <> k2 var
R36606:36610 Basics <> false constr
R36579:36581 Coq.Init.Logic <> :type_scope:x_'='_x not
R36575:36575 Poly <> f var
R36577:36578 Poly <> k1 var
R36582:36583 Poly <> x1 var
R36671:36678 Poly <> override def
def 37189:37199 <> fold_length
R37217:37220 Poly <> list ind
R37222:37222 Poly <> X var
R37227:37229 Coq.Init.Datatypes <> nat ind
R37236:37239 Poly <> fold def
R37258:37258 Poly <> l var
R37253:37253 Coq.Init.Datatypes <> S constr
R37255:37255 Poly <> n var
def 37292:37308 <> test_fold_length1
R37331:37333 Coq.Init.Logic <> :type_scope:x_'='_x not
R37312:37322 Poly <> fold_length def
R37324:37324 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37326:37326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37328:37328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37330:37330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 37419:37437 <> fold_length_correct
R37455:37458 Poly <> list ind
R37460:37460 Poly <> X var
R37479:37481 Coq.Init.Logic <> :type_scope:x_'='_x not
R37466:37476 Poly <> fold_length def
R37478:37478 Poly <> l var
R37482:37487 Poly <> length def
R37489:37489 Poly <> l var
R37518:37528 Poly <> fold_length def
def 37765:37772 <> fold_map
R37795:37795 Poly <> Y var
R37790:37790 Poly <> X var
R37803:37806 Poly <> list ind
R37808:37808 Poly <> X var
R37813:37816 Poly <> list ind
R37818:37818 Poly <> Y var
R37825:37828 Poly <> fold def
R37873:37874 Poly <> ::'['_']' not
R37871:37871 Poly <> l var
R37840:37840 Poly <> X var
R37849:37852 Poly <> list ind
R37854:37854 Poly <> Y var
R37863:37866 Poly <> ::x_'::'_x not
R37860:37860 Poly <> f var
R37862:37862 Poly <> x var
R37867:37868 Poly <> ly var
mod 38513:38518 <> Church
def 38863:38865 Church nat
R38904:38904 Poly <> X var
R38899:38899 Poly <> X var
R38893:38893 Poly <> X var
R38888:38888 Poly <> X var
def 39042:39044 Church one
R39048:39050 Poly Church nat def
R39083:39083 Poly <> X var
R39078:39078 Poly <> X var
R39091:39091 Poly <> X var
R39097:39097 Poly <> f var
R39099:39099 Poly <> x var
def 39168:39170 Church two
R39174:39176 Poly Church nat def
R39208:39208 Poly <> X var
R39203:39203 Poly <> X var
R39216:39216 Poly <> X var
R39222:39222 Poly <> f var
R39225:39225 Poly <> f var
R39227:39227 Poly <> x var
def 39381:39384 Church zero
R39388:39390 Poly Church nat def
R39422:39422 Poly <> X var
R39417:39417 Poly <> X var
R39430:39430 Poly <> X var
R39436:39436 Poly <> x var
def 39704:39708 Church three
R39712:39714 Poly Church nat def
R39720:39729 Poly Church doit3times def
def 39940:39943 Church succ
R39950:39952 Poly Church nat def
R39957:39959 Poly Church nat def
R39985:39989 Basics <> admit prfax
def 40001:40006 Church succ_1
R40019:40021 Coq.Init.Logic <> :type_scope:x_'='_x not
R40010:40013 Poly Church succ def
R40015:40018 Poly Church zero def
R40022:40024 Poly Church one def
def 40072:40077 Church succ_2
R40089:40091 Coq.Init.Logic <> :type_scope:x_'='_x not
R40081:40084 Poly Church succ def
R40086:40088 Poly Church one def
R40092:40094 Poly Church two def
def 40142:40147 Church succ_3
R40159:40161 Coq.Init.Logic <> :type_scope:x_'='_x not
R40151:40154 Poly Church succ def
R40156:40158 Poly Church two def
R40162:40166 Poly Church three def
def 40257:40260 Church plus
R40269:40271 Poly Church nat def
R40276:40278 Poly Church nat def
R40304:40308 Basics <> admit prfax
def 40320:40325 Church plus_1
R40342:40344 Coq.Init.Logic <> :type_scope:x_'='_x not
R40329:40332 Poly Church plus def
R40339:40341 Poly Church one def
R40334:40337 Poly Church zero def
R40345:40347 Poly Church one def
def 40395:40400 Church plus_2
R40418:40420 Coq.Init.Logic <> :type_scope:x_'='_x not
R40404:40407 Poly Church plus def
R40413:40417 Poly Church three def
R40409:40411 Poly Church two def
R40421:40424 Poly Church plus def
R40432:40434 Poly Church two def
R40426:40430 Poly Church three def
def 40482:40487 Church plus_3
R40518:40520 Coq.Init.Logic <> :type_scope:x_'='_x not
R40493:40496 Poly Church plus def
R40513:40517 Poly Church three def
R40499:40502 Poly Church plus def
R40508:40510 Poly Church two def
R40504:40506 Poly Church two def
R40521:40524 Poly Church plus def
R40531:40534 Poly Church plus def
R40542:40546 Poly Church three def
R40536:40540 Poly Church three def
R40526:40528 Poly Church one def
def 40621:40624 Church mult
R40633:40635 Poly Church nat def
R40640:40642 Poly Church nat def
R40669:40673 Basics <> admit prfax
def 40685:40690 Church mult_1
R40706:40708 Coq.Init.Logic <> :type_scope:x_'='_x not
R40694:40697 Poly Church mult def
R40703:40705 Poly Church one def
R40699:40701 Poly Church one def
R40709:40711 Poly Church one def
def 40759:40764 Church mult_2
R40796:40798 Coq.Init.Logic <> :type_scope:x_'='_x not
R40768:40771 Poly Church mult def
R40779:40782 Poly Church plus def
R40790:40794 Poly Church three def
R40784:40788 Poly Church three def
R40773:40776 Poly Church zero def
R40799:40802 Poly Church zero def
def 40850:40855 Church mult_3
R40873:40875 Coq.Init.Logic <> :type_scope:x_'='_x not
R40859:40862 Poly Church mult def
R40868:40872 Poly Church three def
R40864:40866 Poly Church two def
R40876:40879 Poly Church plus def
R40887:40891 Poly Church three def
R40881:40885 Poly Church three def
def 41214:41216 Church exp
R41225:41227 Poly Church nat def
R41232:41234 Poly Church nat def
R41260:41264 Basics <> admit prfax
def 41276:41280 Church exp_1
R41295:41297 Coq.Init.Logic <> :type_scope:x_'='_x not
R41284:41286 Poly Church exp def
R41292:41294 Poly Church two def
R41288:41290 Poly Church two def
R41298:41301 Poly Church plus def
R41307:41309 Poly Church two def
R41303:41305 Poly Church two def
def 41357:41361 Church exp_2
R41378:41380 Coq.Init.Logic <> :type_scope:x_'='_x not
R41365:41367 Poly Church exp def
R41375:41377 Poly Church two def
R41369:41373 Poly Church three def
R41381:41384 Poly Church plus def
R41412:41414 Poly Church one def
R41387:41390 Poly Church mult def
R41397:41400 Poly Church mult def
R41406:41408 Poly Church two def
R41402:41404 Poly Church two def
R41392:41394 Poly Church two def
def 41462:41466 Church exp_3
R41484:41486 Coq.Init.Logic <> :type_scope:x_'='_x not
R41470:41472 Poly Church exp def
R41480:41483 Poly Church zero def
R41474:41478 Poly Church three def
R41487:41489 Poly Church one def
R41533:41538 Poly Church <> mod
