DIGEST 94b0514c3f26bebbdf5a7cfc484c73a2
FImp
R1677:1681 SfLib <> <> lib
mod 2147:2150 <> AExp
ind 2267:2270 AExp aexp
constr 2286:2289 AExp ANum
constr 2309:2313 AExp APlus
constr 2342:2347 AExp AMinus
constr 2376:2380 AExp AMult
R2300:2303 Imp <> aexp ind
R2293:2295 Coq.Init.Datatypes <> nat ind
R2333:2336 Imp <> aexp ind
R2325:2328 Imp <> aexp ind
R2317:2320 Imp <> aexp ind
R2367:2370 Imp <> aexp ind
R2359:2362 Imp <> aexp ind
R2351:2354 Imp <> aexp ind
R2400:2403 Imp <> aexp ind
R2392:2395 Imp <> aexp ind
R2384:2387 Imp <> aexp ind
ind 2417:2420 AExp bexp
constr 2436:2440 AExp BTrue
constr 2453:2458 AExp BFalse
constr 2471:2473 AExp BEq
constr 2502:2504 AExp BLe
constr 2533:2536 AExp BNot
constr 2557:2560 AExp BAnd
R2444:2447 Imp <> bexp ind
R2462:2465 Imp <> bexp ind
R2493:2496 Imp <> bexp ind
R2485:2488 Imp AExp aexp ind
R2477:2480 Imp AExp aexp ind
R2524:2527 Imp <> bexp ind
R2516:2519 Imp AExp aexp ind
R2508:2511 Imp AExp aexp ind
R2548:2551 Imp <> bexp ind
R2540:2543 Imp <> bexp ind
R2580:2583 Imp <> bexp ind
R2572:2575 Imp <> bexp ind
R2564:2567 Imp <> bexp ind
def 5189:5193 AExp aeval
R5200:5203 Imp AExp aexp ind
R5208:5210 Coq.Init.Datatypes <> nat ind
R5223:5223 Imp <> a var
R5234:5237 Imp AExp ANum constr
R5250:5254 Imp AExp APlus constr
R5265:5265 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5274:5278 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5287:5287 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5266:5270 Imp <> aeval def
R5279:5283 Imp <> aeval def
R5293:5298 Imp AExp AMinus constr
R5310:5310 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5319:5323 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5332:5332 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5311:5315 Imp <> aeval def
R5324:5328 Imp <> aeval def
R5338:5342 Imp AExp AMult constr
R5353:5353 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5362:5366 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5375:5375 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5354:5358 Imp <> aeval def
R5367:5371 Imp <> aeval def
def 5393:5403 AExp test_aeval1
R5439:5441 Coq.Init.Logic <> :type_scope:x_'='_x not
R5408:5412 Imp AExp aeval def
R5415:5419 Imp AExp APlus constr
R5431:5434 Imp AExp ANum constr
R5422:5425 Imp AExp ANum constr
def 5560:5564 AExp beval
R5571:5574 Imp AExp bexp ind
R5579:5582 Coq.Init.Datatypes <> bool ind
R5595:5595 Imp <> b var
R5606:5610 Imp AExp BTrue constr
R5621:5624 Coq.Init.Datatypes <> true constr
R5630:5635 Imp AExp BFalse constr
R5645:5649 Coq.Init.Datatypes <> false constr
R5655:5657 Imp AExp BEq constr
R5670:5676 Coq.Arith.EqNat <> beq_nat def
R5690:5694 Imp AExp aeval def
R5679:5683 Imp AExp aeval def
R5704:5706 Imp AExp BLe constr
R5719:5725 SfLib <> ble_nat def
R5739:5743 Imp AExp aeval def
R5728:5732 Imp AExp aeval def
R5753:5756 Imp AExp BNot constr
R5768:5771 Coq.Init.Datatypes <> negb def
R5774:5778 Imp <> beval def
R5788:5791 Imp AExp BAnd constr
R5803:5806 Coq.Init.Datatypes <> andb def
R5820:5824 Imp <> beval def
R5809:5813 Imp <> beval def
def 6223:6236 AExp optimize_0plus
R6241:6244 Imp AExp aexp ind
R6249:6252 Imp AExp aexp ind
R6265:6265 Imp <> a var
R6276:6279 Imp AExp ANum constr
R6292:6295 Imp AExp ANum constr
R6303:6307 Imp AExp APlus constr
R6310:6313 Imp AExp ANum constr
R6330:6343 Imp <> optimize_0plus def
R6352:6356 Imp AExp APlus constr
R6373:6377 Imp AExp APlus constr
R6400:6413 Imp <> optimize_0plus def
R6380:6393 Imp <> optimize_0plus def
R6423:6428 Imp AExp AMinus constr
R6445:6450 Imp AExp AMinus constr
R6473:6486 Imp <> optimize_0plus def
R6453:6466 Imp <> optimize_0plus def
R6496:6500 Imp AExp AMult constr
R6517:6521 Imp AExp AMult constr
R6544:6557 Imp <> optimize_0plus def
R6524:6537 Imp <> optimize_0plus def
def 6710:6728 AExp test_optimize_0plus
R6862:6866 Coq.Init.Logic <> :type_scope:x_'='_x not
R6733:6746 Imp AExp optimize_0plus def
R6749:6753 Imp AExp APlus constr
R6789:6793 Imp AExp APlus constr
R6836:6840 Imp AExp APlus constr
R6852:6855 Imp AExp ANum constr
R6843:6846 Imp AExp ANum constr
R6796:6799 Imp AExp ANum constr
R6756:6759 Imp AExp ANum constr
R6867:6871 Imp AExp APlus constr
R6883:6886 Imp AExp ANum constr
R6874:6877 Imp AExp ANum constr
prf 7106:7125 AExp optimize_0plus_sound
R7164:7166 Coq.Init.Logic <> :type_scope:x_'='_x not
R7140:7144 Imp AExp aeval def
R7147:7160 Imp AExp optimize_0plus def
R7162:7162 Imp <> a var
R7167:7171 Imp AExp aeval def
R7173:7173 Imp <> a var
prf 9279:9283 AExp ev100
R9287:9288 SfLib <> ev ind
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9318:9322 SfLib <> ev_SS constr
R9417:9420 SfLib <> ev_0 constr
R9417:9420 SfLib <> ev_0 constr
prf 9648:9653 AExp ev100'
R9657:9658 SfLib <> ev ind
R9688:9691 SfLib <> ev_0 constr
R9688:9691 SfLib <> ev_0 constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9755:9759 SfLib <> ev_SS constr
R9769:9772 SfLib <> ev_0 constr
R9769:9772 SfLib <> ev_0 constr
prf 10423:10428 AExp silly1
R10451:10453 Coq.Init.Logic <> :type_scope:x_'='_x not
R10443:10447 Imp AExp aeval def
R10449:10450 Imp <> ae var
R10454:10458 Imp AExp aeval def
R10460:10461 Imp <> ae var
prf 10537:10542 AExp silly2
R10570:10570 Imp <> P var
R10565:10565 Imp <> P var
prf 11286:11288 AExp foo
R11313:11315 Coq.Init.Logic <> :type_scope:x_'='_x not
R11302:11308 SfLib <> ble_nat def
R11312:11312 Imp <> n var
R11316:11319 Coq.Init.Datatypes <> true constr
prf 11566:11569 AExp foo'
R11594:11596 Coq.Init.Logic <> :type_scope:x_'='_x not
R11583:11589 SfLib <> ble_nat def
R11593:11593 Imp <> n var
R11597:11600 Coq.Init.Datatypes <> true constr
prf 11931:11951 AExp optimize_0plus_sound'
R11990:11992 Coq.Init.Logic <> :type_scope:x_'='_x not
R11966:11970 Imp AExp aeval def
R11973:11986 Imp AExp optimize_0plus def
R11988:11988 Imp <> a var
R11993:11997 Imp AExp aeval def
R11999:11999 Imp <> a var
prf 14779:14800 AExp optimize_0plus_sound''
R14839:14841 Coq.Init.Logic <> :type_scope:x_'='_x not
R14815:14819 Imp AExp aeval def
R14822:14835 Imp AExp optimize_0plus def
R14837:14837 Imp <> a var
R14842:14846 Imp AExp aeval def
R14848:14848 Imp <> a var
prf 19375:19397 AExp optimize_0plus_sound'''
R19436:19438 Coq.Init.Logic <> :type_scope:x_'='_x not
R19412:19416 Imp AExp aeval def
R19419:19432 Imp AExp optimize_0plus def
R19434:19434 Imp <> a var
R19439:19443 Imp AExp aeval def
R19445:19445 Imp <> a var
def 20680:20695 AExp optimize_0plus_b
R20702:20705 Imp AExp bexp ind
R20710:20713 Imp AExp bexp ind
R20726:20726 Imp <> b var
R20739:20743 Imp AExp BTrue constr
R20748:20748 Imp <> b var
R20756:20761 Imp AExp BFalse constr
R20766:20766 Imp <> b var
R20774:20776 Imp AExp BEq constr
R20787:20789 Imp AExp BEq constr
R20814:20827 Imp AExp optimize_0plus def
R20792:20805 Imp AExp optimize_0plus def
R20841:20843 Imp AExp BLe constr
R20854:20856 Imp AExp BLe constr
R20881:20894 Imp AExp optimize_0plus def
R20859:20872 Imp AExp optimize_0plus def
R20908:20911 Imp AExp BNot constr
R20919:20922 Imp AExp BNot constr
R20925:20940 Imp <> optimize_0plus_b def
R20954:20957 Imp AExp BAnd constr
R20968:20971 Imp AExp BAnd constr
R20998:21013 Imp <> optimize_0plus_b def
R20974:20989 Imp <> optimize_0plus_b def
def 21037:21061 AExp optimize_0plus_b_example1
R21296:21301 Coq.Init.Logic <> :type_scope:x_'='_x not
R21384:21384 Coq.Init.Logic <> :type_scope:x_'='_x not
R21066:21081 Imp AExp optimize_0plus_b def
R21084:21086 Imp AExp BEq constr
R21206:21210 Imp AExp APlus constr
R21234:21238 Imp AExp APlus constr
R21269:21273 Imp AExp APlus constr
R21285:21288 Imp AExp ANum constr
R21276:21279 Imp AExp ANum constr
R21241:21244 Imp AExp ANum constr
R21213:21216 Imp AExp ANum constr
R21094:21098 Imp AExp AMult constr
R21156:21161 Imp AExp AMinus constr
R21173:21177 Imp AExp APlus constr
R21189:21192 Imp AExp ANum constr
R21180:21183 Imp AExp ANum constr
R21164:21167 Imp AExp ANum constr
R21101:21105 Imp AExp APlus constr
R21117:21121 Imp AExp APlus constr
R21133:21136 Imp AExp ANum constr
R21124:21127 Imp AExp ANum constr
R21108:21111 Imp AExp ANum constr
R21302:21304 Imp AExp BEq constr
R21360:21364 Imp AExp APlus constr
R21376:21379 Imp AExp ANum constr
R21367:21370 Imp AExp ANum constr
R21307:21311 Imp AExp AMult constr
R21323:21328 Imp AExp AMinus constr
R21340:21343 Imp AExp ANum constr
R21331:21334 Imp AExp ANum constr
R21314:21317 Imp AExp ANum constr
prf 21421:21442 AExp optimize_0plus_b_sound
R21484:21486 Coq.Init.Logic <> :type_scope:x_'='_x not
R21458:21462 Imp AExp beval def
R21465:21480 Imp AExp optimize_0plus_b def
R21482:21482 Imp <> b var
R21487:21491 Imp AExp beval def
R21493:21493 Imp <> b var
R21579:21601 Imp AExp optimize_0plus_sound''' thm
R21612:21634 Imp AExp optimize_0plus_sound''' thm
R21579:21601 Imp AExp optimize_0plus_sound''' thm
R21612:21634 Imp AExp optimize_0plus_sound''' thm
R21579:21601 Imp AExp optimize_0plus_sound''' thm
R21612:21634 Imp AExp optimize_0plus_sound''' thm
R21579:21601 Imp AExp optimize_0plus_sound''' thm
R21579:21601 Imp AExp optimize_0plus_sound''' thm
def 22846:22869 AExp silly_presburger_example
R22929:22932 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22928:22928 Imp <> m var
R22933:22933 Imp <> p var
R22905:22908 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22896:22899 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22892:22894 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22891:22891 Imp <> m var
R22895:22895 Imp <> n var
R22901:22903 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22900:22900 Imp <> n var
R22904:22904 Imp <> o var
R22914:22916 Coq.Init.Logic <> :type_scope:x_'='_x not
R22910:22912 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22909:22909 Imp <> o var
R22918:22920 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22917:22917 Imp <> p var
mod 25010:25025 <> AExp.aevalR_first_try
ind 25039:25044 AExp.aevalR_first_try aevalR
constr 25075:25080 AExp.aevalR_first_try E_ANum
constr 25130:25136 AExp.aevalR_first_try E_APlus
constr 25260:25267 AExp.aevalR_first_try E_AMinus
constr 25391:25397 AExp.aevalR_first_try E_AMult
R25056:25058 Coq.Init.Datatypes <> nat ind
R25048:25051 Imp AExp.aevalR_first_try aexp ind
R25096:25098 Coq.Init.Datatypes <> nat ind
R25108:25113 Imp <> aevalR ind
R25124:25124 Imp <> n var
R25116:25119 Imp AExp.aevalR_first_try ANum constr
R25121:25121 Imp <> n var
R25155:25158 Imp AExp.aevalR_first_try aexp ind
R25169:25171 Coq.Init.Datatypes <> nat ind
R25225:25230 Imp <> aevalR ind
R25249:25251 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25247:25248 Imp <> n1 var
R25252:25253 Imp <> n2 var
R25233:25237 Imp AExp.aevalR_first_try APlus constr
R25242:25243 Imp <> e2 var
R25239:25240 Imp <> e1 var
R25203:25208 Imp <> aevalR ind
R25213:25214 Imp <> n2 var
R25210:25211 Imp <> e2 var
R25181:25186 Imp <> aevalR ind
R25191:25192 Imp <> n1 var
R25188:25189 Imp <> e1 var
R25285:25288 Imp AExp.aevalR_first_try aexp ind
R25299:25301 Coq.Init.Datatypes <> nat ind
R25355:25360 Imp <> aevalR ind
R25380:25382 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R25378:25379 Imp <> n1 var
R25383:25384 Imp <> n2 var
R25363:25368 Imp AExp.aevalR_first_try AMinus constr
R25373:25374 Imp <> e2 var
R25370:25371 Imp <> e1 var
R25333:25338 Imp <> aevalR ind
R25343:25344 Imp <> n2 var
R25340:25341 Imp <> e2 var
R25311:25316 Imp <> aevalR ind
R25321:25322 Imp <> n1 var
R25318:25319 Imp <> e1 var
R25416:25419 Imp AExp.aevalR_first_try aexp ind
R25430:25432 Coq.Init.Datatypes <> nat ind
R25486:25491 Imp <> aevalR ind
R25510:25512 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25508:25509 Imp <> n1 var
R25513:25514 Imp <> n2 var
R25494:25498 Imp AExp.aevalR_first_try AMult constr
R25503:25504 Imp <> e2 var
R25500:25501 Imp <> e1 var
R25464:25469 Imp <> aevalR ind
R25474:25475 Imp <> n2 var
R25471:25472 Imp <> e2 var
R25442:25447 Imp <> aevalR ind
R25452:25453 Imp <> n1 var
R25449:25450 Imp <> e1 var
R26073:26078 Imp AExp.aevalR_first_try aevalR ind
not 26058 AExp.aevalR_first_try :type_scope:x_'||'_x
R26104:26119 Imp AExp.aevalR_first_try <> mod
ind 26623:26628 AExp aevalR
constr 26659:26664 AExp E_ANum
constr 26708:26714 AExp E_APlus
constr 26819:26826 AExp E_AMinus
constr 26932:26938 AExp E_AMult
R26640:26642 Coq.Init.Datatypes <> nat ind
R26632:26635 Imp AExp aexp ind
R27064:27069 Imp <> aevalR ind
R26678:26680 Coq.Init.Datatypes <> nat ind
R26690:26690 Imp AExp :type_scope:x_'||'_x not
R26697:26701 Imp AExp :type_scope:x_'||'_x not
R26691:26694 Imp AExp ANum constr
R26696:26696 Imp <> n var
R26702:26702 Imp <> n var
R26733:26736 Imp AExp aexp ind
R26748:26750 Coq.Init.Datatypes <> nat ind
R26788:26788 Imp AExp :type_scope:x_'||'_x not
R26800:26805 Imp AExp :type_scope:x_'||'_x not
R26813:26813 Imp AExp :type_scope:x_'||'_x not
R26789:26793 Imp AExp APlus constr
R26798:26799 Imp <> e2 var
R26795:26796 Imp <> e1 var
R26808:26810 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26806:26807 Imp <> n1 var
R26811:26812 Imp <> n2 var
R26777:26780 Imp AExp :type_scope:x_'||'_x not
R26775:26776 Imp <> e2 var
R26781:26782 Imp <> n2 var
R26763:26766 Imp AExp :type_scope:x_'||'_x not
R26761:26762 Imp <> e1 var
R26767:26768 Imp <> n1 var
R26845:26848 Imp AExp aexp ind
R26860:26862 Coq.Init.Datatypes <> nat ind
R26900:26900 Imp AExp :type_scope:x_'||'_x not
R26913:26918 Imp AExp :type_scope:x_'||'_x not
R26926:26926 Imp AExp :type_scope:x_'||'_x not
R26901:26906 Imp AExp AMinus constr
R26911:26912 Imp <> e2 var
R26908:26909 Imp <> e1 var
R26921:26923 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26919:26920 Imp <> n1 var
R26924:26925 Imp <> n2 var
R26889:26892 Imp AExp :type_scope:x_'||'_x not
R26887:26888 Imp <> e2 var
R26893:26894 Imp <> n2 var
R26875:26878 Imp AExp :type_scope:x_'||'_x not
R26873:26874 Imp <> e1 var
R26879:26880 Imp <> n1 var
R26958:26961 Imp AExp aexp ind
R26973:26975 Coq.Init.Datatypes <> nat ind
R27013:27013 Imp AExp :type_scope:x_'||'_x not
R27025:27030 Imp AExp :type_scope:x_'||'_x not
R27038:27038 Imp AExp :type_scope:x_'||'_x not
R27014:27018 Imp AExp AMult constr
R27023:27024 Imp <> e2 var
R27020:27021 Imp <> e1 var
R27033:27035 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27031:27032 Imp <> n1 var
R27036:27037 Imp <> n2 var
R27002:27005 Imp AExp :type_scope:x_'||'_x not
R27000:27001 Imp <> e2 var
R27006:27007 Imp <> n2 var
R26988:26991 Imp AExp :type_scope:x_'||'_x not
R26986:26987 Imp <> e1 var
R26992:26993 Imp <> n1 var
R27064:27069 Imp AExp aevalR ind
not 27049 AExp :type_scope:x_'||'_x
prf 30114:30129 AExp aeval_iff_aevalR
R30147:30147 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30154:30159 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30149:30152 Imp AExp :type_scope:x_'||'_x not
R30148:30148 Imp <> a var
R30153:30153 Imp <> n var
R30167:30169 Coq.Init.Logic <> :type_scope:x_'='_x not
R30160:30164 Imp AExp aeval def
R30166:30166 Imp <> a var
R30170:30170 Imp <> n var
R30659:30664 Imp AExp E_ANum constr
R30659:30664 Imp AExp E_ANum constr
R30696:30702 Imp AExp E_APlus constr
R30696:30702 Imp AExp E_APlus constr
R30797:30804 Imp AExp E_AMinus constr
R30797:30804 Imp AExp E_AMinus constr
R30898:30904 Imp AExp E_AMult constr
R30898:30904 Imp AExp E_AMult constr
prf 31449:31465 AExp aeval_iff_aevalR'
R31483:31483 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31490:31495 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31485:31488 Imp AExp :type_scope:x_'||'_x not
R31484:31484 Imp <> a var
R31489:31489 Imp <> n var
R31503:31505 Coq.Init.Logic <> :type_scope:x_'='_x not
R31496:31500 Imp AExp aeval def
R31502:31502 Imp <> a var
R31506:31506 Imp <> n var
ind 31923:31928 AExp bevalR
constr 31957:31963 AExp E_BTrue
constr 31989:31996 AExp E_Bfalse
constr 32024:32028 AExp E_BEq
constr 32138:32142 AExp E_BLe
constr 32252:32257 AExp E_BNot
constr 32334:32339 AExp E_BAnd
R31939:31942 Coq.Init.Datatypes <> bool ind
R31931:31934 Imp AExp bexp ind
R31967:31972 Imp <> bevalR ind
R31982:31985 Coq.Init.Datatypes <> true constr
R31975:31979 Imp AExp BTrue constr
R32000:32005 Imp <> bevalR ind
R32016:32020 Coq.Init.Datatypes <> false constr
R32008:32013 Imp AExp BFalse constr
R32048:32051 Imp AExp aexp ind
R32063:32065 Coq.Init.Datatypes <> nat ind
R32101:32106 Imp <> bevalR ind
R32121:32127 Coq.Arith.EqNat <> beq_nat def
R32132:32133 Imp <> n2 var
R32129:32130 Imp <> n1 var
R32109:32111 Imp AExp BEq constr
R32116:32117 Imp <> a2 var
R32113:32114 Imp <> a1 var
R32085:32090 Imp AExp aevalR ind
R32095:32096 Imp <> n2 var
R32092:32093 Imp <> a2 var
R32069:32074 Imp AExp aevalR ind
R32079:32080 Imp <> n1 var
R32076:32077 Imp <> a1 var
R32162:32165 Imp AExp aexp ind
R32177:32179 Coq.Init.Datatypes <> nat ind
R32215:32220 Imp <> bevalR ind
R32235:32241 SfLib <> ble_nat def
R32246:32247 Imp <> n2 var
R32243:32244 Imp <> n1 var
R32223:32225 Imp AExp BLe constr
R32230:32231 Imp <> a2 var
R32227:32228 Imp <> a1 var
R32199:32204 Imp AExp aevalR ind
R32209:32210 Imp <> n2 var
R32206:32207 Imp <> a2 var
R32183:32188 Imp AExp aevalR ind
R32193:32194 Imp <> n1 var
R32190:32191 Imp <> a1 var
R32273:32276 Imp AExp bexp ind
R32284:32287 Coq.Init.Datatypes <> bool ind
R32306:32311 Imp <> bevalR ind
R32324:32327 Coq.Init.Datatypes <> negb def
R32329:32329 Imp <> b var
R32314:32317 Imp AExp BNot constr
R32319:32320 Imp <> b1 var
R32291:32296 Imp <> bevalR ind
R32301:32301 Imp <> b var
R32298:32299 Imp <> b1 var
R32358:32361 Imp AExp bexp ind
R32375:32378 Coq.Init.Datatypes <> bool ind
R32416:32421 Imp <> bevalR ind
R32437:32440 Coq.Init.Datatypes <> andb def
R32446:32448 Imp <> bo2 var
R32442:32444 Imp <> bo1 var
R32424:32427 Imp AExp BAnd constr
R32432:32433 Imp <> b2 var
R32429:32430 Imp <> b1 var
R32399:32404 Imp <> bevalR ind
R32409:32411 Imp <> bo2 var
R32406:32407 Imp <> b2 var
R32382:32387 Imp <> bevalR ind
R32392:32394 Imp <> bo1 var
R32389:32390 Imp <> b1 var
prf 32462:32477 AExp beval_iff_bevalR
R32505:32509 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32494:32499 Imp AExp bevalR ind
R32503:32504 Imp <> bv var
R32501:32501 Imp <> b var
R32517:32519 Coq.Init.Logic <> :type_scope:x_'='_x not
R32510:32514 Imp AExp beval def
R32516:32516 Imp <> b var
R32520:32521 Imp <> bv var
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32618:32633 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32618:32633 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32618:32633 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32589:32604 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32759:32774 Imp AExp aeval_iff_aevalR thm
R32866:32869 Imp AExp <> mod
mod 33693:33707 <> aevalR_division
ind 33846:33849 aevalR_division aexp
constr 33865:33868 aevalR_division ANum
constr 33888:33892 aevalR_division APlus
constr 33921:33926 aevalR_division AMinus
constr 33955:33959 aevalR_division AMult
constr 33988:33991 aevalR_division ADiv
R33879:33882 Imp <> aexp ind
R33872:33874 Coq.Init.Datatypes <> nat ind
R33912:33915 Imp <> aexp ind
R33904:33907 Imp <> aexp ind
R33896:33899 Imp <> aexp ind
R33946:33949 Imp <> aexp ind
R33938:33941 Imp <> aexp ind
R33930:33933 Imp <> aexp ind
R33979:33982 Imp <> aexp ind
R33971:33974 Imp <> aexp ind
R33963:33966 Imp <> aexp ind
R34011:34014 Imp <> aexp ind
R34003:34006 Imp <> aexp ind
R33995:33998 Imp <> aexp ind
ind 34271:34276 aevalR_division aevalR
constr 34307:34312 aevalR_division E_ANum
constr 34356:34362 aevalR_division E_APlus
constr 34467:34474 aevalR_division E_AMinus
constr 34580:34586 aevalR_division E_AMult
constr 34692:34697 aevalR_division E_ADiv
R34288:34290 Coq.Init.Datatypes <> nat ind
R34280:34283 Imp aevalR_division aexp ind
R34836:34841 Imp <> aevalR ind
R34326:34328 Coq.Init.Datatypes <> nat ind
R34338:34338 Imp aevalR_division :type_scope:x_'||'_x not
R34345:34349 Imp aevalR_division :type_scope:x_'||'_x not
R34339:34342 Imp aevalR_division ANum constr
R34344:34344 Imp <> n var
R34350:34350 Imp <> n var
R34381:34384 Imp aevalR_division aexp ind
R34396:34398 Coq.Init.Datatypes <> nat ind
R34436:34436 Imp aevalR_division :type_scope:x_'||'_x not
R34448:34453 Imp aevalR_division :type_scope:x_'||'_x not
R34461:34461 Imp aevalR_division :type_scope:x_'||'_x not
R34437:34441 Imp aevalR_division APlus constr
R34446:34447 Imp <> a2 var
R34443:34444 Imp <> a1 var
R34456:34458 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34454:34455 Imp <> n1 var
R34459:34460 Imp <> n2 var
R34425:34428 Imp aevalR_division :type_scope:x_'||'_x not
R34423:34424 Imp <> a2 var
R34429:34430 Imp <> n2 var
R34411:34414 Imp aevalR_division :type_scope:x_'||'_x not
R34409:34410 Imp <> a1 var
R34415:34416 Imp <> n1 var
R34493:34496 Imp aevalR_division aexp ind
R34508:34510 Coq.Init.Datatypes <> nat ind
R34548:34548 Imp aevalR_division :type_scope:x_'||'_x not
R34561:34566 Imp aevalR_division :type_scope:x_'||'_x not
R34574:34574 Imp aevalR_division :type_scope:x_'||'_x not
R34549:34554 Imp aevalR_division AMinus constr
R34559:34560 Imp <> a2 var
R34556:34557 Imp <> a1 var
R34569:34571 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34567:34568 Imp <> n1 var
R34572:34573 Imp <> n2 var
R34537:34540 Imp aevalR_division :type_scope:x_'||'_x not
R34535:34536 Imp <> a2 var
R34541:34542 Imp <> n2 var
R34523:34526 Imp aevalR_division :type_scope:x_'||'_x not
R34521:34522 Imp <> a1 var
R34527:34528 Imp <> n1 var
R34606:34609 Imp aevalR_division aexp ind
R34621:34623 Coq.Init.Datatypes <> nat ind
R34661:34661 Imp aevalR_division :type_scope:x_'||'_x not
R34673:34678 Imp aevalR_division :type_scope:x_'||'_x not
R34686:34686 Imp aevalR_division :type_scope:x_'||'_x not
R34662:34666 Imp aevalR_division AMult constr
R34671:34672 Imp <> a2 var
R34668:34669 Imp <> a1 var
R34681:34683 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34679:34680 Imp <> n1 var
R34684:34685 Imp <> n2 var
R34650:34653 Imp aevalR_division :type_scope:x_'||'_x not
R34648:34649 Imp <> a2 var
R34654:34655 Imp <> n2 var
R34636:34639 Imp aevalR_division :type_scope:x_'||'_x not
R34634:34635 Imp <> a1 var
R34640:34641 Imp <> n1 var
R34717:34720 Imp aevalR_division aexp ind
R34734:34736 Coq.Init.Datatypes <> nat ind
R34795:34795 Imp aevalR_division :type_scope:x_'||'_x not
R34806:34810 Imp aevalR_division :type_scope:x_'||'_x not
R34796:34799 Imp aevalR_division ADiv constr
R34804:34805 Imp <> a2 var
R34801:34802 Imp <> a1 var
R34811:34812 Imp <> n3 var
R34785:34787 Coq.Init.Logic <> :type_scope:x_'='_x not
R34775:34778 Coq.Init.Peano <> mult def
R34783:34784 Imp <> n3 var
R34780:34781 Imp <> n2 var
R34788:34789 Imp <> n1 var
R34763:34766 Imp aevalR_division :type_scope:x_'||'_x not
R34761:34762 Imp <> a2 var
R34767:34768 Imp <> n2 var
R34749:34752 Imp aevalR_division :type_scope:x_'||'_x not
R34747:34748 Imp <> a1 var
R34753:34754 Imp <> n1 var
R34836:34841 Imp aevalR_division aevalR ind
not 34821 aevalR_division :type_scope:x_'||'_x
R34867:34881 Imp aevalR_division <> mod
mod 34891:34905 <> aevalR_extended
ind 35044:35047 aevalR_extended aexp
constr 35063:35066 aevalR_extended AAny
constr 35113:35116 aevalR_extended ANum
constr 35136:35140 aevalR_extended APlus
constr 35169:35174 aevalR_extended AMinus
constr 35203:35207 aevalR_extended AMult
R35071:35074 Imp <> aexp ind
R35127:35130 Imp <> aexp ind
R35120:35122 Coq.Init.Datatypes <> nat ind
R35160:35163 Imp <> aexp ind
R35152:35155 Imp <> aexp ind
R35144:35147 Imp <> aexp ind
R35194:35197 Imp <> aexp ind
R35186:35189 Imp <> aexp ind
R35178:35181 Imp <> aexp ind
R35227:35230 Imp <> aexp ind
R35219:35222 Imp <> aexp ind
R35211:35214 Imp <> aexp ind
ind 35423:35428 aevalR_extended aevalR
constr 35459:35463 aevalR_extended E_Any
constr 35534:35539 aevalR_extended E_ANum
constr 35583:35589 aevalR_extended E_APlus
constr 35694:35701 aevalR_extended E_AMinus
constr 35807:35813 aevalR_extended E_AMult
R35440:35442 Coq.Init.Datatypes <> nat ind
R35432:35435 Imp aevalR_extended aexp ind
R35937:35942 Imp <> aevalR ind
R35477:35479 Coq.Init.Datatypes <> nat ind
R35493:35496 Imp aevalR_extended :type_scope:x_'||'_x not
R35489:35492 Imp aevalR_extended AAny constr
R35497:35497 Imp <> n var
R35553:35555 Coq.Init.Datatypes <> nat ind
R35565:35565 Imp aevalR_extended :type_scope:x_'||'_x not
R35572:35576 Imp aevalR_extended :type_scope:x_'||'_x not
R35566:35569 Imp aevalR_extended ANum constr
R35571:35571 Imp <> n var
R35577:35577 Imp <> n var
R35608:35611 Imp aevalR_extended aexp ind
R35623:35625 Coq.Init.Datatypes <> nat ind
R35663:35663 Imp aevalR_extended :type_scope:x_'||'_x not
R35675:35680 Imp aevalR_extended :type_scope:x_'||'_x not
R35688:35688 Imp aevalR_extended :type_scope:x_'||'_x not
R35664:35668 Imp aevalR_extended APlus constr
R35673:35674 Imp <> a2 var
R35670:35671 Imp <> a1 var
R35683:35685 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35681:35682 Imp <> n1 var
R35686:35687 Imp <> n2 var
R35652:35655 Imp aevalR_extended :type_scope:x_'||'_x not
R35650:35651 Imp <> a2 var
R35656:35657 Imp <> n2 var
R35638:35641 Imp aevalR_extended :type_scope:x_'||'_x not
R35636:35637 Imp <> a1 var
R35642:35643 Imp <> n1 var
R35720:35723 Imp aevalR_extended aexp ind
R35735:35737 Coq.Init.Datatypes <> nat ind
R35775:35775 Imp aevalR_extended :type_scope:x_'||'_x not
R35788:35793 Imp aevalR_extended :type_scope:x_'||'_x not
R35801:35801 Imp aevalR_extended :type_scope:x_'||'_x not
R35776:35781 Imp aevalR_extended AMinus constr
R35786:35787 Imp <> a2 var
R35783:35784 Imp <> a1 var
R35796:35798 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35794:35795 Imp <> n1 var
R35799:35800 Imp <> n2 var
R35764:35767 Imp aevalR_extended :type_scope:x_'||'_x not
R35762:35763 Imp <> a2 var
R35768:35769 Imp <> n2 var
R35750:35753 Imp aevalR_extended :type_scope:x_'||'_x not
R35748:35749 Imp <> a1 var
R35754:35755 Imp <> n1 var
R35833:35836 Imp aevalR_extended aexp ind
R35848:35850 Coq.Init.Datatypes <> nat ind
R35888:35888 Imp aevalR_extended :type_scope:x_'||'_x not
R35900:35905 Imp aevalR_extended :type_scope:x_'||'_x not
R35913:35913 Imp aevalR_extended :type_scope:x_'||'_x not
R35889:35893 Imp aevalR_extended AMult constr
R35898:35899 Imp <> a2 var
R35895:35896 Imp <> a1 var
R35908:35910 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35906:35907 Imp <> n1 var
R35911:35912 Imp <> n2 var
R35877:35880 Imp aevalR_extended :type_scope:x_'||'_x not
R35875:35876 Imp <> a2 var
R35881:35882 Imp <> n2 var
R35863:35866 Imp aevalR_extended :type_scope:x_'||'_x not
R35861:35862 Imp <> a1 var
R35867:35868 Imp <> n1 var
R35937:35942 Imp aevalR_extended aevalR ind
not 35922 aevalR_extended :type_scope:x_'||'_x
R35968:35982 Imp aevalR_extended <> mod
mod 36814:36815 <> Id
ind 37004:37005 Id id
constr 37019:37020 Id Id
R37031:37032 Imp <> id ind
R37024:37026 Coq.Init.Datatypes <> nat ind
prf 37044:37052 Id eq_id_dec
R37073:37074 Imp Id id ind
R37077:37077 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37087:37091 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37102:37102 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37081:37083 Coq.Init.Logic <> :type_scope:x_'='_x not
R37078:37080 Imp <> id1 var
R37084:37086 Imp <> id2 var
R37095:37098 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37092:37094 Imp <> id1 var
R37099:37101 Imp <> id2 var
R37191:37200 Coq.Arith.Peano_dec <> eq_nat_dec thm
R37191:37200 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 37474:37478 Id eq_id
R37505:37505 Imp <> T var
R37524:37524 Coq.Init.Logic <> :type_scope:x_'='_x not
R37555:37558 Coq.Init.Logic <> :type_scope:x_'='_x not
R37528:37536 Imp Id eq_id_dec thm
R37540:37540 Imp <> x var
R37538:37538 Imp <> x var
R37554:37554 Imp <> q var
R37547:37547 Imp <> p var
R37559:37559 Imp <> p var
R37593:37601 Imp Id eq_id_dec thm
R37593:37601 Imp Id eq_id_dec thm
R37685:37702 SfLib <> ex_falso_quodlibet thm
R37685:37702 SfLib <> ex_falso_quodlibet thm
prf 37788:37793 Id neq_id
R37822:37822 Imp <> T var
R37852:37852 Coq.Init.Logic <> :type_scope:x_'='_x not
R37883:37886 Coq.Init.Logic <> :type_scope:x_'='_x not
R37856:37864 Imp Id eq_id_dec thm
R37868:37868 Imp <> y var
R37866:37866 Imp <> x var
R37882:37882 Imp <> q var
R37875:37875 Imp <> p var
R37887:37887 Imp <> q var
R37827:37830 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37826:37826 Imp <> x var
R37831:37831 Imp <> y var
R37920:37928 Imp Id eq_id_dec thm
R37920:37928 Imp Id eq_id_dec thm
R37944:37961 SfLib <> ex_falso_quodlibet thm
R37944:37961 SfLib <> ex_falso_quodlibet thm
R38020:38021 Imp Id <> mod
def 38741:38745 <> state
R38756:38758 Coq.Init.Datatypes <> nat ind
R38750:38751 SfLib <> id ind
def 38773:38783 <> empty_state
R38787:38791 Imp <> state def
def 38822:38827 <> update
R38835:38839 Imp <> state def
R38847:38848 SfLib <> id ind
R38856:38858 Coq.Init.Datatypes <> nat ind
R38863:38867 Imp <> state def
R38887:38895 SfLib <> eq_id_dec thm
R38899:38900 Imp <> x' var
R38897:38897 Imp <> x var
R38914:38915 Imp <> st var
R38917:38918 Imp <> x' var
R38907:38907 Imp <> n var
prf 39063:39071 <> update_eq
R39109:39111 Coq.Init.Logic <> :type_scope:x_'='_x not
R39093:39098 Imp <> update def
R39105:39105 Imp <> n var
R39103:39103 Imp <> x var
R39100:39101 Imp <> st var
R39108:39108 Imp <> x var
R39112:39112 Imp <> n var
R39141:39146 Imp <> update def
R39155:39159 SfLib <> eq_id thm
R39155:39159 SfLib <> eq_id thm
prf 39233:39242 <> update_neq
R39324:39327 Coq.Init.Logic <> :type_scope:x_'='_x not
R39333:39333 Coq.Init.Logic <> :type_scope:x_'='_x not
R39306:39311 Imp <> update def
R39319:39319 Imp <> n var
R39316:39317 Imp <> x2 var
R39313:39314 Imp <> st var
R39322:39323 Imp <> x1 var
R39328:39329 Imp <> st var
R39331:39332 Imp <> x1 var
R39269:39272 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39267:39268 Imp <> x2 var
R39273:39274 Imp <> x1 var
R39362:39367 Imp <> update def
R39376:39381 SfLib <> neq_id prfax
R39376:39381 SfLib <> neq_id prfax
prf 39577:39590 <> update_example
R39604:39606 Coq.Init.Datatypes <> nat ind
R39648:39650 Coq.Init.Logic <> :type_scope:x_'='_x not
R39613:39618 Imp <> update def
R39639:39639 Imp <> n var
R39633:39634 SfLib <> Id constr
R39620:39630 Imp <> empty_state def
R39643:39644 SfLib <> Id constr
R39680:39685 Imp <> update def
R39694:39699 SfLib <> neq_id prfax
R39694:39699 SfLib <> neq_id prfax
prf 39821:39833 <> update_shadow
R39862:39866 Imp <> state def
R39909:39911 Coq.Init.Logic <> :type_scope:x_'='_x not
R39874:39879 Imp <> update def
R39903:39904 Imp <> n2 var
R39900:39901 Imp <> x2 var
R39883:39888 Imp <> update def
R39896:39897 Imp <> n1 var
R39893:39894 Imp <> x2 var
R39890:39891 Imp <> st var
R39907:39908 Imp <> x1 var
R39913:39918 Imp <> update def
R39926:39927 Imp <> n2 var
R39923:39924 Imp <> x2 var
R39920:39921 Imp <> st var
R39930:39931 Imp <> x1 var
R39958:39963 Imp <> update def
R39976:39984 SfLib <> eq_id_dec thm
R39976:39984 SfLib <> eq_id_dec thm
prf 40089:40099 <> update_same
R40125:40129 Imp <> state def
R40171:40173 Coq.Init.Logic <> :type_scope:x_'='_x not
R40152:40157 Imp <> update def
R40165:40166 Imp <> n1 var
R40162:40163 Imp <> x1 var
R40159:40160 Imp <> st var
R40169:40170 Imp <> x2 var
R40174:40175 Imp <> st var
R40177:40178 Imp <> x2 var
R40140:40142 Coq.Init.Logic <> :type_scope:x_'='_x not
R40135:40136 Imp <> st var
R40138:40139 Imp <> x1 var
R40143:40144 Imp <> n1 var
R40205:40210 Imp <> update def
R40223:40231 SfLib <> eq_id_dec thm
R40223:40231 SfLib <> eq_id_dec thm
prf 40351:40364 <> update_permute
R40446:40448 Coq.Init.Logic <> :type_scope:x_'='_x not
R40412:40417 Imp <> update def
R40440:40441 Imp <> n2 var
R40437:40438 Imp <> x1 var
R40420:40425 Imp <> update def
R40433:40434 Imp <> n1 var
R40430:40431 Imp <> x2 var
R40427:40428 Imp <> st var
R40444:40445 Imp <> x3 var
R40450:40455 Imp <> update def
R40478:40479 Imp <> n1 var
R40475:40476 Imp <> x2 var
R40458:40463 Imp <> update def
R40471:40472 Imp <> n2 var
R40468:40469 Imp <> x1 var
R40465:40466 Imp <> st var
R40482:40483 Imp <> x3 var
R40398:40401 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40396:40397 Imp <> x2 var
R40402:40403 Imp <> x1 var
R40510:40515 Imp <> update def
R40528:40536 SfLib <> eq_id_dec thm
R40528:40536 SfLib <> eq_id_dec thm
R40558:40566 SfLib <> eq_id_dec thm
R40558:40566 SfLib <> eq_id_dec thm
R40647:40655 SfLib <> eq_id_dec thm
R40647:40655 SfLib <> eq_id_dec thm
ind 40912:40915 <> aexp
constr 40931:40934 <> ANum
constr 40954:40956 <> AId
constr 41007:41011 <> APlus
constr 41040:41045 <> AMinus
constr 41074:41078 <> AMult
R40945:40948 Imp <> aexp ind
R40938:40940 Coq.Init.Datatypes <> nat ind
R40966:40969 Imp <> aexp ind
R40960:40961 SfLib <> id ind
R41031:41034 Imp <> aexp ind
R41023:41026 Imp <> aexp ind
R41015:41018 Imp <> aexp ind
R41065:41068 Imp <> aexp ind
R41057:41060 Imp <> aexp ind
R41049:41052 Imp <> aexp ind
R41098:41101 Imp <> aexp ind
R41090:41093 Imp <> aexp ind
R41082:41085 Imp <> aexp ind
def 41393:41393 <> X
R41397:41398 SfLib <> id ind
R41403:41404 SfLib <> Id constr
def 41420:41420 <> Y
R41424:41425 SfLib <> id ind
R41430:41431 SfLib <> Id constr
def 41447:41447 <> Z
R41451:41452 SfLib <> id ind
R41457:41458 SfLib <> Id constr
ind 41826:41829 <> bexp
constr 41845:41849 <> BTrue
constr 41862:41867 <> BFalse
constr 41880:41882 <> BEq
constr 41911:41913 <> BLe
constr 41942:41945 <> BNot
constr 41966:41969 <> BAnd
R41853:41856 Imp <> bexp ind
R41871:41874 Imp <> bexp ind
R41902:41905 Imp <> bexp ind
R41894:41897 Imp <> aexp ind
R41886:41889 Imp <> aexp ind
R41933:41936 Imp <> bexp ind
R41925:41928 Imp <> aexp ind
R41917:41920 Imp <> aexp ind
R41957:41960 Imp <> bexp ind
R41949:41952 Imp <> bexp ind
R41989:41992 Imp <> bexp ind
R41981:41984 Imp <> bexp ind
R41973:41976 Imp <> bexp ind
def 42380:42384 <> aeval
R42392:42396 Imp <> state def
R42404:42407 Imp <> aexp ind
R42412:42414 Coq.Init.Datatypes <> nat ind
R42427:42427 Imp <> a var
R42438:42441 Imp <> ANum constr
R42454:42456 Imp <> AId constr
R42463:42464 Imp <> st var
R42528:42532 Imp <> APlus constr
R42543:42543 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42555:42559 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42571:42571 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42544:42548 Imp <> aeval def
R42550:42551 Imp <> st var
R42560:42564 Imp <> aeval def
R42566:42567 Imp <> st var
R42577:42582 Imp <> AMinus constr
R42594:42594 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42606:42610 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42622:42622 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42595:42599 Imp <> aeval def
R42601:42602 Imp <> st var
R42611:42615 Imp <> aeval def
R42617:42618 Imp <> st var
R42628:42632 Imp <> AMult constr
R42643:42643 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42655:42659 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42671:42671 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42644:42648 Imp <> aeval def
R42650:42651 Imp <> st var
R42660:42664 Imp <> aeval def
R42666:42667 Imp <> st var
def 42690:42694 <> beval
R42702:42706 Imp <> state def
R42714:42717 Imp <> bexp ind
R42722:42725 Coq.Init.Datatypes <> bool ind
R42738:42738 Imp <> b var
R42749:42753 Imp <> BTrue constr
R42764:42767 Coq.Init.Datatypes <> true constr
R42773:42778 Imp <> BFalse constr
R42788:42792 Coq.Init.Datatypes <> false constr
R42798:42800 Imp <> BEq constr
R42813:42819 Coq.Arith.EqNat <> beq_nat def
R42836:42840 Imp <> aeval def
R42842:42843 Imp <> st var
R42822:42826 Imp <> aeval def
R42828:42829 Imp <> st var
R42853:42855 Imp <> BLe constr
R42868:42874 SfLib <> ble_nat def
R42891:42895 Imp <> aeval def
R42897:42898 Imp <> st var
R42877:42881 Imp <> aeval def
R42883:42884 Imp <> st var
R42908:42911 Imp <> BNot constr
R42923:42926 Coq.Init.Datatypes <> negb def
R42929:42933 Imp <> beval def
R42935:42936 Imp <> st var
R42946:42949 Imp <> BAnd constr
R42961:42964 Coq.Init.Datatypes <> andb def
R42981:42985 Imp <> beval def
R42987:42988 Imp <> st var
R42967:42971 Imp <> beval def
R42973:42974 Imp <> st var
def 43010:43014 <> aexp1
R43100:43104 Coq.Init.Logic <> :type_scope:x_'='_x not
R43020:43024 Imp <> aeval def
R43060:43064 Imp <> APlus constr
R43076:43080 Imp <> AMult constr
R43091:43094 Imp <> ANum constr
R43083:43085 Imp <> AId constr
R43087:43087 Imp <> X def
R43067:43070 Imp <> ANum constr
R43027:43032 Imp <> update def
R43046:43046 Imp <> X def
R43034:43044 Imp <> empty_state def
def 43143:43147 <> bexp1
R43234:43238 Coq.Init.Logic <> :type_scope:x_'='_x not
R43153:43157 Imp <> beval def
R43193:43196 Imp <> BAnd constr
R43205:43208 Imp <> BNot constr
R43211:43213 Imp <> BLe constr
R43224:43227 Imp <> ANum constr
R43216:43218 Imp <> AId constr
R43220:43220 Imp <> X def
R43198:43202 Imp <> BTrue constr
R43160:43165 Imp <> update def
R43179:43179 Imp <> X def
R43167:43177 Imp <> empty_state def
R43239:43242 Coq.Init.Datatypes <> true constr
ind 44086:44088 <> com
constr 44104:44108 <> CSkip
constr 44120:44123 <> CAss
constr 44149:44152 <> CSeq
constr 44178:44180 <> CIf
constr 44214:44219 <> CWhile
R44112:44114 Imp <> com ind
R44141:44143 Imp <> com ind
R44133:44136 Imp <> aexp ind
R44127:44128 SfLib <> id ind
R44170:44172 Imp <> com ind
R44163:44165 Imp <> com ind
R44156:44158 Imp <> com ind
R44206:44208 Imp <> com ind
R44199:44201 Imp <> com ind
R44192:44194 Imp <> com ind
R44184:44187 Imp <> bexp ind
R44238:44240 Imp <> com ind
R44231:44233 Imp <> com ind
R44223:44226 Imp <> bexp ind
R44891:44895 Imp <> CSkip constr
not 44877 <> ::'SKIP'
R44925:44928 Imp <> CAss constr
not 44907 <> ::x_'::='_x
R44976:44979 Imp <> CSeq constr
not 44959 <> ::x_';;'_x
R45064:45069 Imp <> CWhile constr
not 45033 <> ::'WHILE'_x_'DO'_x_'END'
R45163:45165 Imp <> CIf constr
not 45121 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 45327:45337 <> fact_in_coq
R45341:45343 Imp <> com ind
R45361:45365 Imp <> ::x_';;'_x not
R45351:45355 Imp <> ::x_'::='_x not
R45350:45350 Imp <> Z def
R45356:45358 Imp <> AId constr
R45360:45360 Imp <> X def
R45378:45382 Imp <> ::x_';;'_x not
R45367:45371 Imp <> ::x_'::='_x not
R45366:45366 Imp <> Y def
R45372:45375 Imp <> ANum constr
R45383:45388 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45416:45423 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45487:45492 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45389:45392 Imp <> BNot constr
R45395:45397 Imp <> BEq constr
R45408:45411 Imp <> ANum constr
R45400:45402 Imp <> AId constr
R45404:45404 Imp <> Z def
R45451:45457 Imp <> ::x_';;'_x not
R45425:45429 Imp <> ::x_'::='_x not
R45424:45424 Imp <> Y def
R45430:45434 Imp <> AMult constr
R45445:45447 Imp <> AId constr
R45449:45449 Imp <> Z def
R45437:45439 Imp <> AId constr
R45441:45441 Imp <> Y def
R45459:45463 Imp <> ::x_'::='_x not
R45458:45458 Imp <> Z def
R45464:45469 Imp <> AMinus constr
R45480:45483 Imp <> ANum constr
R45472:45474 Imp <> AId constr
R45476:45476 Imp <> Z def
def 45609:45613 <> plus2
R45617:45619 Imp <> com ind
R45627:45632 Imp <> ::x_'::='_x not
R45655:45655 Imp <> ::x_'::='_x not
R45626:45626 Imp <> X def
R45633:45637 Imp <> APlus constr
R45648:45651 Imp <> ANum constr
R45640:45642 Imp <> AId constr
R45644:45644 Imp <> X def
def 45670:45679 <> XtimesYinZ
R45683:45685 Imp <> com ind
R45693:45698 Imp <> ::x_'::='_x not
R45720:45720 Imp <> ::x_'::='_x not
R45692:45692 Imp <> Z def
R45699:45703 Imp <> AMult constr
R45714:45716 Imp <> AId constr
R45718:45718 Imp <> Y def
R45706:45708 Imp <> AId constr
R45710:45710 Imp <> X def
def 45735:45754 <> subtract_slowly_body
R45758:45760 Imp <> com ind
R45796:45801 Imp <> ::x_';;'_x not
R45768:45772 Imp <> ::x_'::='_x not
R45767:45767 Imp <> Z def
R45773:45778 Imp <> AMinus constr
R45789:45792 Imp <> ANum constr
R45781:45783 Imp <> AId constr
R45785:45785 Imp <> Z def
R45803:45807 Imp <> ::x_'::='_x not
R45802:45802 Imp <> X def
R45808:45813 Imp <> AMinus constr
R45824:45827 Imp <> ANum constr
R45816:45818 Imp <> AId constr
R45820:45820 Imp <> X def
def 45864:45878 <> subtract_slowly
R45882:45884 Imp <> com ind
R45891:45896 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45924:45931 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45952:45957 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45897:45900 Imp <> BNot constr
R45903:45905 Imp <> BEq constr
R45916:45919 Imp <> ANum constr
R45908:45910 Imp <> AId constr
R45912:45912 Imp <> X def
R45932:45951 Imp <> subtract_slowly_body def
def 45972:45995 <> subtract_3_from_5_slowly
R45999:46001 Imp <> com ind
R46020:46025 Imp <> ::x_';;'_x not
R46009:46013 Imp <> ::x_'::='_x not
R46008:46008 Imp <> X def
R46014:46017 Imp <> ANum constr
R46038:46043 Imp <> ::x_';;'_x not
R46027:46031 Imp <> ::x_'::='_x not
R46026:46026 Imp <> Z def
R46032:46035 Imp <> ANum constr
R46044:46058 Imp <> subtract_slowly def
def 46104:46107 <> loop
R46111:46113 Imp <> com ind
R46120:46125 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46131:46138 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46143:46148 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46126:46130 Imp <> BTrue constr
R46139:46142 Imp <> ::'SKIP' not
def 46640:46657 <> ceval_fun_no_while
R46665:46669 Imp <> state def
R46677:46679 Imp <> com ind
R46684:46688 Imp <> state def
R46701:46701 Imp <> c var
R46714:46717 Imp <> ::'SKIP' not
R46730:46731 Imp <> st var
R46740:46744 Imp <> ::x_'::='_x not
R46759:46764 Imp <> update def
R46772:46776 Imp <> aeval def
R46778:46779 Imp <> st var
R46766:46767 Imp <> st var
R46793:46796 Imp <> ::x_';;'_x not
R46822:46839 Imp <> ceval_fun_no_while def
R46841:46842 Imp <> st var
R46858:46875 Imp <> ceval_fun_no_while def
R46877:46879 Imp <> st' var
R46890:46893 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46895:46900 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46903:46908 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46911:46913 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46930:46934 Imp <> beval def
R46936:46937 Imp <> st var
R46997:47014 Imp <> ceval_fun_no_while def
R47016:47017 Imp <> st var
R46957:46974 Imp <> ceval_fun_no_while def
R46976:46977 Imp <> st var
R47028:47033 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47035:47038 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47040:47043 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47056:47057 Imp <> st var
ind 51044:51048 <> ceval
constr 51089:51094 <> E_Skip
constr 51135:51139 <> E_Ass
constr 51232:51236 <> E_Seq
constr 51351:51358 <> E_IfTrue
constr 51485:51493 <> E_IfFalse
constr 51621:51630 <> E_WhileEnd
constr 51717:51727 <> E_WhileLoop
R51068:51072 Imp <> state def
R51059:51063 Imp <> state def
R51052:51054 Imp <> com ind
R51919:51923 Imp <> ceval ind
R51119:51121 Imp <> ::x_'/'_x_'||'_x not
R51124:51127 Imp <> ::x_'/'_x_'||'_x not
R51115:51118 Imp <> ::'SKIP' not
R51122:51123 Imp <> st var
R51128:51129 Imp <> st var
R51193:51193 Imp <> ::x_'/'_x_'||'_x not
R51202:51205 Imp <> ::x_'/'_x_'||'_x not
R51208:51212 Imp <> ::x_'/'_x_'||'_x not
R51226:51226 Imp <> ::x_'/'_x_'||'_x not
R51195:51199 Imp <> ::x_'::='_x not
R51194:51194 Imp <> x var
R51200:51201 Imp <> a1 var
R51206:51207 Imp <> st var
R51213:51218 Imp <> update def
R51225:51225 Imp <> n var
R51223:51223 Imp <> x var
R51220:51221 Imp <> st var
R51179:51181 Coq.Init.Logic <> :type_scope:x_'='_x not
R51168:51172 Imp <> aeval def
R51177:51178 Imp <> a1 var
R51174:51175 Imp <> st var
R51182:51182 Imp <> n var
R51323:51323 Imp <> ::x_'/'_x_'||'_x not
R51332:51335 Imp <> ::x_'/'_x_'||'_x not
R51338:51341 Imp <> ::x_'/'_x_'||'_x not
R51326:51329 Imp <> ::x_';;'_x not
R51324:51325 Imp <> c1 var
R51330:51331 Imp <> c2 var
R51336:51337 Imp <> st var
R51342:51345 Imp <> st'' var
R51299:51301 Imp <> ::x_'/'_x_'||'_x not
R51305:51308 Imp <> ::x_'/'_x_'||'_x not
R51297:51298 Imp <> c2 var
R51302:51304 Imp <> st' var
R51309:51312 Imp <> st'' var
R51274:51276 Imp <> ::x_'/'_x_'||'_x not
R51279:51283 Imp <> ::x_'/'_x_'||'_x not
R51272:51273 Imp <> c1 var
R51277:51278 Imp <> st var
R51284:51286 Imp <> st' var
R51442:51442 Imp <> ::x_'/'_x_'||'_x not
R51467:51470 Imp <> ::x_'/'_x_'||'_x not
R51473:51476 Imp <> ::x_'/'_x_'||'_x not
R51443:51446 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51448:51453 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51456:51461 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51464:51466 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51447:51447 Imp <> b var
R51454:51455 Imp <> c1 var
R51462:51463 Imp <> c2 var
R51471:51472 Imp <> st var
R51477:51479 Imp <> st' var
R51420:51422 Imp <> ::x_'/'_x_'||'_x not
R51425:51428 Imp <> ::x_'/'_x_'||'_x not
R51418:51419 Imp <> c1 var
R51423:51424 Imp <> st var
R51429:51431 Imp <> st' var
R51401:51403 Coq.Init.Logic <> :type_scope:x_'='_x not
R51391:51395 Imp <> beval def
R51400:51400 Imp <> b var
R51397:51398 Imp <> st var
R51404:51407 Coq.Init.Datatypes <> true constr
R51578:51578 Imp <> ::x_'/'_x_'||'_x not
R51603:51606 Imp <> ::x_'/'_x_'||'_x not
R51609:51612 Imp <> ::x_'/'_x_'||'_x not
R51579:51582 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51584:51589 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51592:51597 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51600:51602 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51583:51583 Imp <> b var
R51590:51591 Imp <> c1 var
R51598:51599 Imp <> c2 var
R51607:51608 Imp <> st var
R51613:51615 Imp <> st' var
R51556:51558 Imp <> ::x_'/'_x_'||'_x not
R51561:51564 Imp <> ::x_'/'_x_'||'_x not
R51554:51555 Imp <> c2 var
R51559:51560 Imp <> st var
R51565:51567 Imp <> st' var
R51536:51538 Coq.Init.Logic <> :type_scope:x_'='_x not
R51526:51530 Imp <> beval def
R51535:51535 Imp <> b var
R51532:51533 Imp <> st var
R51539:51543 Coq.Init.Datatypes <> false constr
R51683:51683 Imp <> ::x_'/'_x_'||'_x not
R51700:51703 Imp <> ::x_'/'_x_'||'_x not
R51706:51709 Imp <> ::x_'/'_x_'||'_x not
R51684:51689 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51691:51694 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51696:51699 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51690:51690 Imp <> b var
R51695:51695 Imp <> c var
R51704:51705 Imp <> st var
R51710:51711 Imp <> st var
R51665:51667 Coq.Init.Logic <> :type_scope:x_'='_x not
R51655:51659 Imp <> beval def
R51664:51664 Imp <> b var
R51661:51662 Imp <> st var
R51668:51672 Coq.Init.Datatypes <> false constr
R51853:51853 Imp <> ::x_'/'_x_'||'_x not
R51870:51873 Imp <> ::x_'/'_x_'||'_x not
R51876:51879 Imp <> ::x_'/'_x_'||'_x not
R51854:51859 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51861:51864 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51866:51869 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51860:51860 Imp <> b var
R51865:51865 Imp <> c var
R51874:51875 Imp <> st var
R51880:51883 Imp <> st'' var
R51811:51811 Imp <> ::x_'/'_x_'||'_x not
R51828:51831 Imp <> ::x_'/'_x_'||'_x not
R51835:51838 Imp <> ::x_'/'_x_'||'_x not
R51812:51817 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51819:51822 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51824:51827 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51818:51818 Imp <> b var
R51823:51823 Imp <> c var
R51832:51834 Imp <> st' var
R51839:51842 Imp <> st'' var
R51789:51791 Imp <> ::x_'/'_x_'||'_x not
R51794:51797 Imp <> ::x_'/'_x_'||'_x not
R51788:51788 Imp <> c var
R51792:51793 Imp <> st var
R51798:51800 Imp <> st' var
R51771:51773 Coq.Init.Logic <> :type_scope:x_'='_x not
R51761:51765 Imp <> beval def
R51770:51770 Imp <> b var
R51767:51768 Imp <> st var
R51774:51777 Coq.Init.Datatypes <> true constr
R51919:51923 Imp <> ceval ind
not 51894 <> ::x_'/'_x_'||'_x
def 52445:52458 <> ceval_example1
R52465:52465 Imp <> ::x_'/'_x_'||'_x not
R52568:52574 Imp <> ::x_'/'_x_'||'_x not
R52586:52593 Imp <> ::x_'/'_x_'||'_x not
R52629:52629 Imp <> ::x_'/'_x_'||'_x not
R52478:52485 Imp <> ::x_';;'_x not
R52467:52471 Imp <> ::x_'::='_x not
R52466:52466 Imp <> X def
R52472:52475 Imp <> ANum constr
R52486:52489 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52510:52522 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52535:52547 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52560:52567 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52490:52492 Imp <> BLe constr
R52503:52506 Imp <> ANum constr
R52495:52497 Imp <> AId constr
R52499:52499 Imp <> X def
R52524:52528 Imp <> ::x_'::='_x not
R52523:52523 Imp <> Y def
R52529:52532 Imp <> ANum constr
R52549:52553 Imp <> ::x_'::='_x not
R52548:52548 Imp <> Z def
R52554:52557 Imp <> ANum constr
R52575:52585 Imp <> empty_state def
R52594:52599 Imp <> update def
R52626:52626 Imp <> Z def
R52602:52607 Imp <> update def
R52621:52621 Imp <> X def
R52609:52619 Imp <> empty_state def
R52705:52710 Imp <> update def
R52724:52724 Imp <> X def
R52712:52722 Imp <> empty_state def
R52693:52697 Imp <> E_Seq constr
R52705:52710 Imp <> update def
R52724:52724 Imp <> X def
R52712:52722 Imp <> empty_state def
R52693:52697 Imp <> E_Seq constr
R52769:52773 Imp <> E_Ass constr
R52769:52773 Imp <> E_Ass constr
R52820:52828 Imp <> E_IfFalse constr
R52820:52828 Imp <> E_IfFalse constr
R52862:52866 Imp <> E_Ass constr
R52862:52866 Imp <> E_Ass constr
def 52945:52958 <> ceval_example2
R52965:52965 Imp <> ::x_'/'_x_'||'_x not
R53008:53011 Imp <> ::x_'/'_x_'||'_x not
R53023:53031 Imp <> ::x_'/'_x_'||'_x not
R53080:53080 Imp <> ::x_'/'_x_'||'_x not
R52978:52980 Imp <> ::x_';;'_x not
R52967:52971 Imp <> ::x_'::='_x not
R52966:52966 Imp <> X def
R52972:52975 Imp <> ANum constr
R52993:52995 Imp <> ::x_';;'_x not
R52982:52986 Imp <> ::x_'::='_x not
R52981:52981 Imp <> Y def
R52987:52990 Imp <> ANum constr
R52997:53001 Imp <> ::x_'::='_x not
R52996:52996 Imp <> Z def
R53002:53005 Imp <> ANum constr
R53012:53022 Imp <> empty_state def
R53032:53037 Imp <> update def
R53077:53077 Imp <> Z def
R53040:53045 Imp <> update def
R53072:53072 Imp <> Y def
R53048:53053 Imp <> update def
R53067:53067 Imp <> X def
R53055:53065 Imp <> empty_state def
R53110:53115 Imp <> update def
R53129:53129 Imp <> X def
R53117:53127 Imp <> empty_state def
R53098:53102 Imp <> E_Seq constr
R53110:53115 Imp <> update def
R53129:53129 Imp <> X def
R53117:53127 Imp <> empty_state def
R53098:53102 Imp <> E_Seq constr
R53143:53147 Imp <> E_Ass constr
R53143:53147 Imp <> E_Ass constr
R53183:53188 Imp <> update def
R53215:53215 Imp <> Y def
R53191:53196 Imp <> update def
R53210:53210 Imp <> X def
R53198:53208 Imp <> empty_state def
R53171:53175 Imp <> E_Seq constr
R53183:53188 Imp <> update def
R53215:53215 Imp <> Y def
R53191:53196 Imp <> update def
R53210:53210 Imp <> X def
R53198:53208 Imp <> empty_state def
R53171:53175 Imp <> E_Seq constr
R53229:53233 Imp <> E_Ass constr
R53229:53233 Imp <> E_Ass constr
R53258:53262 Imp <> E_Ass constr
R53258:53262 Imp <> E_Ass constr
def 53596:53603 <> pup_to_n
R53607:53609 Imp <> com ind
R53630:53637 Imp <> ::x_';;'_x not
R53617:53622 Imp <> ::x_'::='_x not
R53629:53629 Imp <> ::x_'::='_x not
R53616:53616 Imp <> Y def
R53623:53626 Imp <> ANum constr
R53638:53643 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53671:53685 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53761:53775 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53644:53647 Imp <> BNot constr
R53650:53652 Imp <> BEq constr
R53663:53666 Imp <> ANum constr
R53655:53657 Imp <> AId constr
R53659:53659 Imp <> X def
R53715:53729 Imp <> ::x_';;'_x not
R53687:53692 Imp <> ::x_'::='_x not
R53714:53714 Imp <> ::x_'::='_x not
R53686:53686 Imp <> Y def
R53693:53697 Imp <> APlus constr
R53708:53710 Imp <> AId constr
R53712:53712 Imp <> X def
R53700:53702 Imp <> AId constr
R53704:53704 Imp <> Y def
R53731:53736 Imp <> ::x_'::='_x not
R53760:53760 Imp <> ::x_'::='_x not
R53730:53730 Imp <> X def
R53737:53742 Imp <> AMinus constr
R53753:53756 Imp <> ANum constr
R53745:53747 Imp <> AId constr
R53749:53749 Imp <> X def
prf 53787:53800 <> pup_to_2_ceval
R53814:53817 Imp <> ::x_'/'_x_'||'_x not
R53840:53848 Imp <> ::x_'/'_x_'||'_x not
R53806:53813 Imp <> pup_to_n def
R53818:53823 Imp <> update def
R53837:53837 Imp <> X def
R53825:53835 Imp <> empty_state def
R53849:53854 Imp <> update def
R53939:53939 Imp <> X def
R53857:53862 Imp <> update def
R53934:53934 Imp <> Y def
R53865:53870 Imp <> update def
R53929:53929 Imp <> X def
R53873:53878 Imp <> update def
R53924:53924 Imp <> Y def
R53881:53886 Imp <> update def
R53919:53919 Imp <> Y def
R53889:53894 Imp <> update def
R53914:53914 Imp <> X def
R53896:53906 Imp <> empty_state def
R53960:53967 Imp <> pup_to_n def
R53990:53995 Imp <> update def
R54022:54022 Imp <> Y def
R53998:54003 Imp <> update def
R54017:54017 Imp <> X def
R54005:54015 Imp <> empty_state def
R53978:53982 Imp <> E_Seq constr
R53990:53995 Imp <> update def
R54022:54022 Imp <> Y def
R53998:54003 Imp <> update def
R54017:54017 Imp <> X def
R54005:54015 Imp <> empty_state def
R53978:53982 Imp <> E_Seq constr
R54036:54040 Imp <> E_Ass constr
R54036:54040 Imp <> E_Ass constr
R54082:54087 Imp <> update def
R54140:54140 Imp <> X def
R54090:54095 Imp <> update def
R54135:54135 Imp <> Y def
R54098:54103 Imp <> update def
R54130:54130 Imp <> Y def
R54106:54111 Imp <> update def
R54125:54125 Imp <> X def
R54113:54123 Imp <> empty_state def
R54064:54074 Imp <> E_WhileLoop constr
R54082:54087 Imp <> update def
R54140:54140 Imp <> X def
R54090:54095 Imp <> update def
R54135:54135 Imp <> Y def
R54098:54103 Imp <> update def
R54130:54130 Imp <> Y def
R54106:54111 Imp <> update def
R54125:54125 Imp <> X def
R54113:54123 Imp <> empty_state def
R54064:54074 Imp <> E_WhileLoop constr
R54188:54193 Imp <> update def
R54233:54233 Imp <> Y def
R54196:54201 Imp <> update def
R54228:54228 Imp <> Y def
R54204:54209 Imp <> update def
R54223:54223 Imp <> X def
R54211:54221 Imp <> empty_state def
R54176:54180 Imp <> E_Seq constr
R54188:54193 Imp <> update def
R54233:54233 Imp <> Y def
R54196:54201 Imp <> update def
R54228:54228 Imp <> Y def
R54204:54209 Imp <> update def
R54223:54223 Imp <> X def
R54211:54221 Imp <> empty_state def
R54176:54180 Imp <> E_Seq constr
R54247:54251 Imp <> E_Ass constr
R54247:54251 Imp <> E_Ass constr
R54282:54286 Imp <> E_Ass constr
R54282:54286 Imp <> E_Ass constr
R54329:54334 Imp <> update def
R54435:54435 Imp <> X def
R54337:54342 Imp <> update def
R54419:54419 Imp <> Y def
R54356:54361 Imp <> update def
R54414:54414 Imp <> X def
R54364:54369 Imp <> update def
R54409:54409 Imp <> Y def
R54372:54377 Imp <> update def
R54404:54404 Imp <> Y def
R54380:54385 Imp <> update def
R54399:54399 Imp <> X def
R54387:54397 Imp <> empty_state def
R54310:54320 Imp <> E_WhileLoop constr
R54329:54334 Imp <> update def
R54435:54435 Imp <> X def
R54337:54342 Imp <> update def
R54419:54419 Imp <> Y def
R54356:54361 Imp <> update def
R54414:54414 Imp <> X def
R54364:54369 Imp <> update def
R54409:54409 Imp <> Y def
R54372:54377 Imp <> update def
R54404:54404 Imp <> Y def
R54380:54385 Imp <> update def
R54399:54399 Imp <> X def
R54387:54397 Imp <> empty_state def
R54310:54320 Imp <> E_WhileLoop constr
R54477:54482 Imp <> update def
R54548:54548 Imp <> Y def
R54485:54490 Imp <> update def
R54543:54543 Imp <> X def
R54493:54498 Imp <> update def
R54538:54538 Imp <> Y def
R54501:54506 Imp <> update def
R54533:54533 Imp <> Y def
R54509:54514 Imp <> update def
R54528:54528 Imp <> X def
R54516:54526 Imp <> empty_state def
R54465:54469 Imp <> E_Seq constr
R54477:54482 Imp <> update def
R54548:54548 Imp <> Y def
R54485:54490 Imp <> update def
R54543:54543 Imp <> X def
R54493:54498 Imp <> update def
R54538:54538 Imp <> Y def
R54501:54506 Imp <> update def
R54533:54533 Imp <> Y def
R54509:54514 Imp <> update def
R54528:54528 Imp <> X def
R54516:54526 Imp <> empty_state def
R54465:54469 Imp <> E_Seq constr
R54562:54566 Imp <> E_Ass constr
R54562:54566 Imp <> E_Ass constr
R54590:54594 Imp <> E_Ass constr
R54590:54594 Imp <> E_Ass constr
R54619:54628 Imp <> E_WhileEnd constr
R54619:54628 Imp <> E_WhileEnd constr
prf 55423:55441 <> ceval_deterministic
R55518:55520 Coq.Init.Logic <> :type_scope:x_'='_x not
R55515:55517 Imp <> st1 var
R55521:55523 Imp <> st2 var
R55494:55496 Imp <> ::x_'/'_x_'||'_x not
R55499:55502 Imp <> ::x_'/'_x_'||'_x not
R55493:55493 Imp <> c var
R55497:55498 Imp <> st var
R55503:55505 Imp <> st2 var
R55471:55473 Imp <> ::x_'/'_x_'||'_x not
R55476:55479 Imp <> ::x_'/'_x_'||'_x not
R55470:55470 Imp <> c var
R55474:55475 Imp <> st var
R55480:55482 Imp <> st1 var
R55762:55764 Coq.Init.Logic <> :type_scope:x_'='_x not
R55762:55764 Coq.Init.Logic <> :type_scope:x_'='_x not
R56551:56553 Coq.Init.Logic <> :type_scope:x_'='_x not
R56551:56553 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 57033:57042 <> plus2_spec
R57107:57109 Coq.Init.Logic <> :type_scope:x_'='_x not
R57102:57104 Imp <> st' var
R57106:57106 Imp <> X def
R57111:57113 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R57110:57110 Imp <> n var
R57084:57086 Imp <> ::x_'/'_x_'||'_x not
R57089:57092 Imp <> ::x_'/'_x_'||'_x not
R57079:57083 Imp <> plus2 def
R57087:57088 Imp <> st var
R57093:57095 Imp <> st' var
R57069:57071 Coq.Init.Logic <> :type_scope:x_'='_x not
R57065:57066 Imp <> st var
R57068:57068 Imp <> X def
R57072:57072 Imp <> n var
R57420:57428 Imp <> update_eq thm
R57420:57428 Imp <> update_eq thm
prf 57632:57647 <> loop_never_stops
R57668:57669 Coq.Init.Logic <> :type_scope:'~'_x not
R57686:57686 Coq.Init.Logic <> :type_scope:'~'_x not
R57674:57676 Imp <> ::x_'/'_x_'||'_x not
R57679:57682 Imp <> ::x_'/'_x_'||'_x not
R57670:57673 Imp <> loop def
R57677:57678 Imp <> st var
R57683:57685 Imp <> st' var
R57727:57730 Imp <> loop def
R57755:57760 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57766:57769 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57774:57777 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57761:57765 Imp <> BTrue constr
R57770:57773 Imp <> ::'SKIP' not
R57755:57760 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57766:57769 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57774:57777 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57761:57765 Imp <> BTrue constr
R57770:57773 Imp <> ::'SKIP' not
def 58260:58268 <> no_whiles
R58275:58277 Imp <> com ind
R58282:58285 Coq.Init.Datatypes <> bool ind
R58298:58298 Imp <> c var
R58309:58312 Imp <> ::'SKIP' not
R58323:58326 Coq.Init.Datatypes <> true constr
R58333:58337 Imp <> ::x_'::='_x not
R58346:58349 Coq.Init.Datatypes <> true constr
R58357:58360 Imp <> ::x_';;'_x not
R58368:58371 Coq.Init.Datatypes <> andb def
R58389:58397 Imp <> no_whiles def
R58374:58382 Imp <> no_whiles def
R58407:58410 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58412:58417 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58420:58425 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58428:58430 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58435:58438 Coq.Init.Datatypes <> andb def
R58456:58464 Imp <> no_whiles def
R58441:58449 Imp <> no_whiles def
R58474:58479 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58481:58484 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58486:58489 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58495:58499 Coq.Init.Datatypes <> false constr
ind 58798:58807 <> no_whilesR
constr 58827:58833 <> no_Skip
constr 58855:58860 <> no_Ass
constr 58899:58904 <> no_Seq
constr 58979:58983 <> no_If
R58810:58812 Imp <> com ind
R58837:58846 Imp <> no_whilesR ind
R58848:58851 Imp <> ::'SKIP' not
R58876:58885 Imp <> no_whilesR ind
R58889:58893 Imp <> ::x_'::='_x not
R58888:58888 Imp <> x var
R58894:58894 Imp <> a var
R58955:58964 Imp <> no_whilesR ind
R58969:58972 Imp <> ::x_';;'_x not
R58967:58968 Imp <> c1 var
R58973:58974 Imp <> c2 var
R58938:58947 Imp <> no_whilesR ind
R58949:58950 Imp <> c2 var
R58921:58930 Imp <> no_whilesR ind
R58932:58933 Imp <> c1 var
R59036:59045 Imp <> no_whilesR ind
R59048:59051 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59053:59058 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59061:59066 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59069:59071 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59052:59052 Imp <> b var
R59059:59060 Imp <> c1 var
R59067:59068 Imp <> c2 var
R59019:59028 Imp <> no_whilesR ind
R59030:59031 Imp <> c2 var
R59003:59012 Imp <> no_whilesR ind
R59014:59015 Imp <> c1 var
prf 59088:59100 <> no_whiles_eqv
R59134:59138 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R59127:59129 Coq.Init.Logic <> :type_scope:x_'='_x not
R59116:59124 Imp <> no_whiles def
R59126:59126 Imp <> c var
R59130:59133 Coq.Init.Datatypes <> true constr
R59139:59148 Imp <> no_whilesR ind
R59150:59150 Imp <> c var
prf 59471:59489 <> no_whiles_terminate
R59524:59526 Coq.Init.Logic <> :type_scope:x_'='_x not
R59513:59521 Imp <> no_whiles def
R59523:59523 Imp <> c var
R59527:59530 Coq.Init.Datatypes <> true constr
R59563:59569 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59573:59574 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59576:59577 Imp <> ::x_'/'_x_'||'_x not
R59580:59583 Imp <> ::x_'/'_x_'||'_x not
R59575:59575 Imp <> c var
R59578:59579 Imp <> st var
R59584:59586 Imp <> st' var
R59703:59708 Imp <> update def
R59716:59720 Imp <> aeval def
R59703:59708 Imp <> update def
R59716:59720 Imp <> aeval def
R59779:59791 Coq.Bool.Bool <> andb_true_iff thm
R59779:59791 Coq.Bool.Bool <> andb_true_iff thm
R59929:59933 Imp <> E_Seq constr
R59929:59933 Imp <> E_Seq constr
R59985:59997 Coq.Bool.Bool <> andb_true_iff thm
R59985:59997 Coq.Bool.Bool <> andb_true_iff thm
R60120:60124 Imp <> beval def
R60120:60124 Imp <> beval def
R60155:60162 Imp <> E_IfTrue constr
R60155:60162 Imp <> E_IfTrue constr
R60204:60212 Imp <> E_IfFalse constr
R60204:60212 Imp <> E_IfFalse constr
ind 61607:61612 <> sinstr
constr 61626:61630 <> SPush
constr 61650:61654 <> SLoad
constr 61673:61677 <> SPlus
constr 61690:61695 <> SMinus
constr 61708:61712 <> SMult
R61641:61646 Imp <> sinstr ind
R61634:61636 Coq.Init.Datatypes <> nat ind
R61664:61669 Imp <> sinstr ind
R61658:61659 SfLib <> id ind
R61681:61686 Imp <> sinstr ind
R61699:61704 Imp <> sinstr ind
R61716:61721 Imp <> sinstr ind
def 62366:62374 <> s_execute
R62382:62386 Imp <> state def
R62398:62401 Coq.Init.Datatypes <> list ind
R62403:62405 Coq.Init.Datatypes <> nat ind
R62435:62438 Coq.Init.Datatypes <> list ind
R62440:62445 Imp <> sinstr ind
R62467:62470 Coq.Init.Datatypes <> list ind
R62472:62474 Coq.Init.Datatypes <> nat ind
R62487:62490 Imp <> prog var
R62503:62504 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62509:62513 Imp <> stack var
R62525:62528 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62570:62574 Imp <> SPush constr
R62581:62589 Imp <> s_execute def
R62596:62599 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62600:62604 Imp <> stack var
R62591:62592 Imp <> st var
R62623:62627 Imp <> SLoad constr
R62634:62642 Imp <> s_execute def
R62652:62655 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62648:62649 Imp <> st var
R62656:62660 Imp <> stack var
R62644:62645 Imp <> st var
R62679:62683 Imp <> SPlus constr
R62704:62708 Imp <> stack var
R62731:62734 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62737:62740 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62751:62759 Imp <> s_execute def
R62772:62775 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62767:62769 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R62761:62762 Imp <> st var
R62809:62810 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62836:62841 Imp <> SMinus constr
R62862:62866 Imp <> stack var
R62889:62892 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62895:62898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62909:62917 Imp <> s_execute def
R62930:62932 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62925:62927 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R62919:62920 Imp <> st var
R62966:62967 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62993:62997 Imp <> SMult constr
R63018:63022 Imp <> stack var
R63045:63048 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63051:63054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63065:63073 Imp <> s_execute def
R63086:63089 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63081:63083 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R63075:63076 Imp <> st var
R63123:63131 Imp <> s_execute def
R63136:63140 Imp <> stack var
R63133:63134 Imp <> st var
def 63188:63197 <> s_execute1
R63273:63278 Coq.Init.Logic <> :type_scope:x_'='_x not
R63206:63214 Imp <> s_execute def
R63238:63238 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63246:63247 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63255:63256 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63264:63265 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63272:63272 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63266:63271 Imp <> SMinus constr
R63257:63261 Imp <> SPush constr
R63248:63252 Imp <> SPush constr
R63239:63243 Imp <> SPush constr
R63228:63229 Coq.Lists.List ListNotations :list_scope:'['_']' not
R63216:63226 Imp <> empty_state def
R63279:63279 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63281:63282 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63284:63284 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 63331:63340 <> s_execute2
R63429:63434 Coq.Init.Logic <> :type_scope:x_'='_x not
R63349:63357 Imp <> s_execute def
R63397:63397 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63405:63406 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63414:63415 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63421:63422 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63428:63428 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63423:63427 Imp <> SPlus constr
R63416:63420 Imp <> SMult constr
R63407:63411 Imp <> SLoad constr
R63413:63413 Imp <> X def
R63398:63402 Imp <> SPush constr
R63384:63384 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63386:63386 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63388:63388 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63360:63365 Imp <> update def
R63379:63379 Imp <> X def
R63367:63377 Imp <> empty_state def
R63435:63435 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63438:63439 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63441:63441 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 63690:63698 <> s_compile
R63705:63708 Imp <> aexp ind
R63713:63716 Coq.Init.Datatypes <> list ind
R63718:63723 Imp <> sinstr ind
R63738:63738 Imp <> e var
R63751:63754 Imp <> ANum constr
R63761:63761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63769:63769 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63762:63766 Imp <> SPush constr
R63777:63779 Imp <> AId constr
R63786:63786 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63794:63794 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63787:63791 Imp <> SLoad constr
R63802:63806 Imp <> APlus constr
R63815:63815 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63827:63831 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63816:63824 Imp <> s_compile def
R63832:63832 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63844:63848 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63833:63841 Imp <> s_compile def
R63849:63849 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63855:63855 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63850:63854 Imp <> SPlus constr
R63863:63868 Imp <> AMinus constr
R63877:63877 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63889:63893 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63878:63886 Imp <> s_compile def
R63894:63894 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63906:63910 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63895:63903 Imp <> s_compile def
R63911:63911 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63918:63918 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63912:63917 Imp <> SMinus constr
R63926:63930 Imp <> AMult constr
R63939:63939 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63951:63955 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63940:63948 Imp <> s_compile def
R63956:63956 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63968:63972 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63957:63965 Imp <> s_compile def
R63973:63973 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63979:63979 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63974:63978 Imp <> SMult constr
def 64090:64099 <> s_compile1
R64158:64162 Coq.Init.Logic <> :type_scope:x_'='_x not
R64107:64115 Imp <> s_compile def
R64118:64123 Imp <> AMinus constr
R64134:64138 Imp <> AMult constr
R64150:64152 Imp <> AId constr
R64154:64154 Imp <> Y def
R64141:64144 Imp <> ANum constr
R64126:64128 Imp <> AId constr
R64130:64130 Imp <> X def
R64163:64163 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64171:64172 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64180:64181 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64189:64190 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64196:64197 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64204:64204 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64198:64203 Imp <> SMinus constr
R64191:64195 Imp <> SMult constr
R64182:64186 Imp <> SLoad constr
R64188:64188 Imp <> Y def
R64173:64177 Imp <> SPush constr
R64164:64168 Imp <> SLoad constr
R64170:64170 Imp <> X def
prf 65004:65004 <> K
R65021:65025 Imp <> state def
R65033:65036 Coq.Init.Datatypes <> list ind
R65038:65040 Coq.Init.Datatypes <> nat ind
R65052:65055 Coq.Init.Datatypes <> list ind
R65057:65062 Imp <> sinstr ind
R65103:65105 Coq.Init.Logic <> :type_scope:x_'='_x not
R65078:65086 Imp <> s_execute def
R65096:65099 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R65094:65095 Imp <> s1 var
R65100:65101 Imp <> s2 var
R65091:65091 Imp <> s var
R65088:65089 Imp <> st var
R65106:65114 Imp <> s_execute def
R65139:65140 Imp <> s2 var
R65120:65128 Imp <> s_execute def
R65135:65136 Imp <> s1 var
R65133:65133 Imp <> s var
R65130:65131 Imp <> st var
R65116:65117 Imp <> st var
prf 65301:65317 <> s_compile_correct
R65334:65338 Imp <> state def
R65346:65349 Imp <> aexp ind
R65384:65386 Coq.Init.Logic <> :type_scope:x_'='_x not
R65355:65363 Imp <> s_execute def
R65372:65380 Imp <> s_compile def
R65382:65382 Imp <> e var
R65368:65369 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65365:65366 Imp <> st var
R65387:65387 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65398:65398 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65388:65392 Imp <> aeval def
R65397:65397 Imp <> e var
R65394:65395 Imp <> st var
R65476:65479 Coq.Init.Datatypes <> list ind
R65481:65483 Coq.Init.Datatypes <> nat ind
R65471:65472 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65476:65479 Coq.Init.Datatypes <> list ind
R65481:65483 Coq.Init.Datatypes <> nat ind
R65471:65472 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65572:65572 Imp <> K prfax
R65572:65572 Imp <> K prfax
R65597:65597 Imp <> K prfax
R65597:65597 Imp <> K prfax
R65661:65661 Imp <> K prfax
R65661:65661 Imp <> K prfax
R65686:65686 Imp <> K prfax
R65686:65686 Imp <> K prfax
R65748:65748 Imp <> K prfax
R65748:65748 Imp <> K prfax
R65773:65773 Imp <> K prfax
R65773:65773 Imp <> K prfax
mod 65889:65896 <> BreakImp
ind 66193:66195 BreakImp com
constr 66211:66215 BreakImp CSkip
constr 66227:66232 BreakImp CBreak
constr 66244:66247 BreakImp CAss
constr 66273:66276 BreakImp CSeq
constr 66302:66304 BreakImp CIf
constr 66338:66343 BreakImp CWhile
R66219:66221 Imp <> com ind
R66236:66238 Imp <> com ind
R66265:66267 Imp <> com ind
R66257:66260 Imp BreakImp aexp ind
R66251:66252 SfLib <> id ind
R66294:66296 Imp <> com ind
R66287:66289 Imp <> com ind
R66280:66282 Imp <> com ind
R66330:66332 Imp <> com ind
R66323:66325 Imp <> com ind
R66316:66318 Imp <> com ind
R66308:66311 Imp BreakImp bexp ind
R66362:66364 Imp <> com ind
R66355:66357 Imp <> com ind
R66347:66350 Imp BreakImp bexp ind
R66579:66583 Imp BreakImp CSkip constr
not 66565 BreakImp ::'SKIP'
R66610:66615 Imp BreakImp CBreak constr
not 66595 BreakImp ::'BREAK'
R66645:66648 Imp BreakImp CAss constr
not 66627 BreakImp ::x_'::='_x
R66696:66699 Imp BreakImp CSeq constr
not 66679 BreakImp ::x_';;'_x
R66784:66789 Imp BreakImp CWhile constr
not 66753 BreakImp ::'WHILE'_x_'DO'_x_'END'
R66883:66885 Imp BreakImp CIf constr
not 66841 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 67983:67988 BreakImp status
constr 68004:68012 BreakImp SContinue
constr 68027:68032 BreakImp SBreak
R68016:68021 Imp <> status ind
R68036:68041 Imp <> status ind
ind 70437:70441 BreakImp ceval
constr 70492:70497 BreakImp E_Skip
R70471:70475 Imp BreakImp state def
R70461:70466 Imp BreakImp status ind
R70452:70456 Imp BreakImp state def
R70445:70447 Imp BreakImp com ind
R70608:70612 Imp <> ceval ind
R70523:70525 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70528:70531 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70541:70543 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70518:70522 Imp BreakImp CSkip constr
R70526:70527 Imp <> st var
R70532:70540 Imp BreakImp SContinue constr
R70544:70545 Imp <> st var
R70608:70612 Imp BreakImp ceval ind
not 70577 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 70821:70832 BreakImp break_ignore
R70898:70900 Coq.Init.Logic <> :type_scope:x_'='_x not
R70896:70897 Imp <> st var
R70901:70903 Imp <> st' var
R70860:70860 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70870:70873 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70876:70879 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70881:70883 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70866:70868 Imp BreakImp ::x_';;'_x not
R70861:70865 Imp BreakImp ::'BREAK' not
R70869:70869 Imp <> c var
R70874:70875 Imp <> st var
R70880:70880 Imp <> s var
R70884:70886 Imp <> st' var
prf 70953:70966 BreakImp while_continue
R71034:71036 Coq.Init.Logic <> :type_scope:x_'='_x not
R71033:71033 Imp <> s var
R71037:71045 Imp BreakImp SContinue constr
R70993:70993 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71010:71013 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71016:71019 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71021:71023 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70994:70999 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71001:71004 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71006:71009 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71000:71000 Imp <> b var
R71005:71005 Imp <> c var
R71014:71015 Imp <> st var
R71020:71020 Imp <> s var
R71024:71026 Imp <> st' var
prf 71095:71114 BreakImp while_stops_on_break
R71190:71190 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71207:71210 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71213:71216 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71226:71228 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71191:71196 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71198:71201 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71203:71206 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71197:71197 Imp <> b var
R71202:71202 Imp <> c var
R71211:71212 Imp <> st var
R71217:71225 Imp BreakImp SContinue constr
R71229:71231 Imp <> st' var
R71163:71165 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71168:71171 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71178:71180 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71162:71162 Imp <> c var
R71166:71167 Imp <> st var
R71172:71177 Imp BreakImp SBreak constr
R71181:71183 Imp <> st' var
R71149:71151 Coq.Init.Logic <> :type_scope:x_'='_x not
R71139:71143 Imp BreakImp beval def
R71148:71148 Imp <> b var
R71145:71146 Imp <> st var
R71152:71155 Coq.Init.Datatypes <> true constr
prf 71351:71366 BreakImp while_break_true
R71463:71469 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71474:71475 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71477:71479 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71484:71487 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71494:71496 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71476:71476 Imp <> c var
R71480:71483 Imp <> st'' var
R71488:71493 Imp BreakImp SBreak constr
R71497:71499 Imp <> st' var
R71450:71452 Coq.Init.Logic <> :type_scope:x_'='_x not
R71439:71443 Imp BreakImp beval def
R71449:71449 Imp <> b var
R71445:71447 Imp <> st' var
R71453:71456 Coq.Init.Datatypes <> true constr
R71391:71391 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71408:71411 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71414:71417 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71427:71429 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71392:71397 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71399:71402 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71404:71407 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71398:71398 Imp <> b var
R71403:71403 Imp <> c var
R71412:71413 Imp <> st var
R71418:71426 Imp BreakImp SContinue constr
R71430:71432 Imp <> st' var
prf 71620:71638 BreakImp ceval_deterministic
R71651:71653 Imp BreakImp com ind
R71743:71746 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71737:71739 Coq.Init.Logic <> :type_scope:x_'='_x not
R71734:71736 Imp <> st1 var
R71740:71742 Imp <> st2 var
R71749:71751 Coq.Init.Logic <> :type_scope:x_'='_x not
R71747:71748 Imp <> s1 var
R71752:71753 Imp <> s2 var
R71708:71710 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71713:71716 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71719:71721 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71707:71707 Imp <> c var
R71711:71712 Imp <> st var
R71717:71718 Imp <> s2 var
R71722:71724 Imp <> st2 var
R71680:71682 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71685:71688 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71691:71693 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71679:71679 Imp <> c var
R71683:71684 Imp <> st var
R71689:71690 Imp <> s1 var
R71694:71696 Imp <> st1 var
R71799:71806 Imp BreakImp <> mod
